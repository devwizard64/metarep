#ifndef _MAKE_MAIN_H_
#define _MAKE_MAIN_H_
#define OBJECT(addr, name)                          \
    SZP(object_##name, object/name/gfx)             \
    FILE(addr, object_##name, object/name/g)
#define BACKGROUND(name)                            \
    SZP(background_##name, background/name)
#define TEXTURE(name)                               \
    SZP(texture_##name, texture/name)
#define PARTICLE(name)                              \
    SZP(particle_##name, particle/name)
#define STAGE(name)                                 \
    SZP(stage_##name, stage/name/gfx)               \
    SCRIPT(SEGMENT_DATA_STAGE, name)
#endif /* _MAKE_MAIN_H_ */

#include <sm64/segment.h>

CODE(
    SEGMENT_MAIN, main,
    TEXT(ultra/lib/PR/crt0.o)
    TEXT(BUILD/src/main.ld.o)
    TEXT(ultra/lib/PR/rspboot.o)
    TEXT(ultra/lib/PR/gspFast3D.fifo.o)
    TEXT(ultra/lib/PR/aspMain.o)
    DATA(BUILD/src/main.ld.o)
    DATA(ultra/lib/PR/rspboot.o)
    DATA(ultra/lib/PR/gspFast3D.fifo.o)
    DATA(ultra/lib/PR/aspMain.o),
    BSS(BUILD/src/main.ld.o)
    BSS(ultra/lib/PR/rspboot.o)
    BSS(ultra/lib/PR/gspFast3D.fifo.o)
    BSS(ultra/lib/PR/aspMain.o)
)
CODE(
    SEGMENT_MAIN2, main2,
    TEXT(BUILD/src/main2.ld.o)
    DATA(BUILD/src/main2.ld.o),
    BSS(BUILD/src/main2.ld.o)
)
FILE(SEGMENT_DATA_MAIN, main, main/s)
SZP(main, main/gfx)
OBJECT(SEGMENT_DATA_PLAYER, player)
OBJECT(SEGMENT_DATA_OBJECTA, a0)
OBJECT(SEGMENT_DATA_OBJECTA, a1)
OBJECT(SEGMENT_DATA_OBJECTA, a2)
OBJECT(SEGMENT_DATA_OBJECTA, a3)
OBJECT(SEGMENT_DATA_OBJECTA, a4)
OBJECT(SEGMENT_DATA_OBJECTA, a5)
OBJECT(SEGMENT_DATA_OBJECTA, a6)
OBJECT(SEGMENT_DATA_OBJECTA, a7)
OBJECT(SEGMENT_DATA_OBJECTA, a8)
OBJECT(SEGMENT_DATA_OBJECTA, a9)
OBJECT(SEGMENT_DATA_OBJECTA, a10)
OBJECT(SEGMENT_DATA_OBJECTB, b0)
OBJECT(SEGMENT_DATA_OBJECTB, b1)
OBJECT(SEGMENT_DATA_OBJECTB, b2)
OBJECT(SEGMENT_DATA_OBJECTB, b3)
OBJECT(SEGMENT_DATA_OBJECTB, b4)
OBJECT(SEGMENT_DATA_OBJECTB, b5)
OBJECT(SEGMENT_DATA_OBJECTC, c0)
OBJECT(SEGMENT_DATA_ENTITY, entity)
FILE(SEGMENT_DATA_OBJECT, object, object/o)
CODE(
    SEGMENT_MENU, menu,
    TEXT(BUILD/src/title.o)
    TEXT(BUILD/src/title_bg.o)
    TEXT(BUILD/src/file_select.o)
    TEXT(BUILD/src/star_select.o)
    TEXT(BUILD/src/face.ld.o)
    DATA(BUILD/src/title.data.o)
    DATA(BUILD/src/title_bg.data.o)
    DATA(BUILD/src/file_select.data.o)
    DATA(BUILD/src/star_select.data.o)
    DATA(BUILD/src/face.ld.o),
    BSS(BUILD/src/title.data.o)
    BSS(BUILD/src/title_bg.data.o)
    BSS(BUILD/src/file_select.data.o)
    BSS(BUILD/src/star_select.data.o)
    BSS(BUILD/src/face.ld.o)
)
SCRIPT(SEGMENT_DATA_MENU, title)
SZP(stage_title_a, stage/title/gfx_a)
SZP(stage_title_b, stage/title/gfx_b)
BACKGROUND(title)
FILE(SEGMENT_DATA_FACE, face, face/data)
SCRIPT(SEGMENT_DATA_MENU, menu)
SZP(stage_menu, stage/menu/gfx)
FILE(SEGMENT_DATA_GAME, game, game)
BACKGROUND(a)
BACKGROUND(b)
BACKGROUND(c)
BACKGROUND(d)
BACKGROUND(e)
BACKGROUND(f)
BACKGROUND(g)
BACKGROUND(h)
BACKGROUND(i)
BACKGROUND(j)
TEXTURE(a)
TEXTURE(b)
TEXTURE(c)
TEXTURE(d)
TEXTURE(e)
TEXTURE(f)
TEXTURE(g)
TEXTURE(h)
TEXTURE(i)
TEXTURE(j)
TEXTURE(k)
TEXTURE(l)
PARTICLE(a)
STAGE(bbh)
STAGE(ccm)
STAGE(inside)
STAGE(hmc)
STAGE(ssl)
STAGE(bob)
STAGE(sl)
STAGE(wdw)
STAGE(jrb)
STAGE(thi)
STAGE(ttc)
STAGE(rr)
STAGE(grounds)
STAGE(bitdw)
STAGE(vcutm)
STAGE(bitfs)
STAGE(sa)
STAGE(bits)
STAGE(lll)
STAGE(ddd)
STAGE(wf)
STAGE(end)
STAGE(courtyard)
STAGE(pss)
STAGE(cotmc)
STAGE(totwc)
STAGE(bitdwa)
STAGE(wmotr)
STAGE(bitfsa)
STAGE(bitsa)
STAGE(ttm)
FILE(0, motion_player, motion_player/data)
FILE(0, demo,          demo/data)
FILE(0, audio_ctl,     audio/ctl)
FILE(0, audio_tbl,     audio/tbl)
FILE(0, audio_seq,     audio/seq)
FILE(0, audio_bnk,     audio/bnk)
