import os
import struct

import main
import hvc
from hvc.meta import *

sym_PRG = {
	# src/main.s
	0xC000: main.sym("start"),
	0xC04F: main.sym("_mainloop"),
	0xC06A: main.sym("_idleloop"),
	0xC07D: main.sym("nmi"),
	0xC0B6: main.sym("code_C0B6"),
	0xC130: main.sym("_C130"),
	0xC149: main.sym("_C149"),
	0xC196: main.sym("_C196"),
	0xC1C3: main.sym("_C1C3"),
	0xC1EC: main.sym("_C1EC"),
	0xC1FD: main.sym("_C1FD"),
	0xC22D: main.sym("_C22D"),
	0xC2AD: main.sym("_C2AD"),
	0xC334: main.sym("_C334"),
	0xC35B: main.sym("_C35B"),
	0xC37D: main.sym("_C37D"),
	0xC3A0: main.sym("code_C3A0"),
	0xC3A8: main.sym("_C3A8"),
	0xC3C2: main.sym("code_C3C2"),
	0xC3E3: main.sym("code_C3E3"),
	0xC3F5: main.sym("code_C3F5"),
	0xC402: main.sym("_C402"),
	0xC41F: main.sym("code_C41F"),
	0xC429: main.sym("code_C429"),
	0xC430: main.sym("_C430"),
	0xC446: main.sym("code_C446"),
	0xC44A: main.sym("code_C44A"),
	0xC4B8: main.sym("code_C4B8"),
	0xC570: main.sym("_C570"),
	0xC5A3: main.sym("code_C5A3"),
	0xC5DB: main.sym("code_C5DB"),
	0xC657: main.sym("_C657"),
	0xC65D: main.sym("_C65D"),
	0xC66A: main.sym("code_C66A"),
	0xC686: main.sym("_C686"),
	0xC6BF: main.sym("_C6BF"),
	0xC708: main.sym("_C708"),
	0xC747: main.sym("_C747"),
	0xC75A: main.sym("_C75A"),
	0xC75D: main.sym("_C75D"),
	0xC785: main.sym("code_C785"),
	0xC7CD: main.sym("_C7CD"),
	0xC884: main.sym("_C884"),
	0xC8B5: main.sym("_C8B5"),
	0xC8B7: main.sym("_C8B7"),
	0xC8D1: main.sym("_C8D1"),
	0xC8D7: main.sym("_C8D7"),
	0xC8F4: main.sym("_C8F4"),
	0xC93A: main.sym("_C93A"),
	0xC97D: main.sym("_C97D"),
	0xC992: main.sym("_C992"),
	0xC9A1: main.sym("_C9A1"),
	0xC9CB: main.sym("code_C9CB"),
	0xC9DB: main.sym("_C9DB"),
	0xC9DD: main.sym("_C9DD"),
	0xC9E6: main.sym("_C9E6"),
	0xC9FE: main.sym("_C9FE"),
	0xCA1B: main.sym("code_CA1B"),
	0xCA20: main.sym("code_CA20"),
	0xCA22: main.sym("code_CA22"),
	0xCA2B: main.sym("code_CA2B"),
	0xCA35: main.sym("code_CA35"),
	0xCA3B: main.sym("code_CA3B"),
	0xCA5E: main.sym("code_CA5E"),
	0xCA66: main.sym("code_CA66"),
	0xCA7D: main.sym("code_CA7D"),
	0xCAA4: main.sym("code_CAA4"),
	0xCAB9: main.sym("code_CAB9"),
	0xCACC: main.sym("_CACC"),
	0xCAEB: main.sym("code_CAEB"),
	0xCAF7: main.sym("code_CAF7"),
	0xCB48: main.sym("_CB48"),
	0xCB50: main.sym("code_CB50"),
	0xCB58: main.sym("code_CB58"),
	0xCB85: main.sym("code_CB85"),
	0xCB9B: main.sym("code_CB9B"),
	0xCBAE: main.sym("code_CBAE"),
	0xCBB6: main.sym("code_CBB6"),
	0xCBC4: main.sym("code_CBC4"),
	0xCC22: main.sym("_CC22"),
	0xCC29: main.sym("code_CC29"),
	0xCC3F: main.sym("code_CC3F"),
	0xCC73: main.sym("code_CC73"),
	0xCCA0: main.sym("code_CCA0"),
	0xCCC5: main.sym("code_CCC5"),
	0xCCD3: main.sym("code_CCD3"),
	0xCCFF: main.sym("code_CCFF"),
	0xCD43: main.sym("_CD43"),
	0xCD88: main.sym("code_CD88"),
	0xCD9E: main.sym("JumpProc"),
	0xCDB4: main.sym("code_CDB4"),
	0xCE00: main.sym("code_CE00"),
	0xCE09: main.sym("code_CE09"),
	0xCE16: main.sym("code_CE16"),
	0xCE2C: main.sym("code_CE2C"),
	0xCE84: main.sym("code_CE84"),
	0xCE86: main.sym("code_CE86"),
	0xCE95: main.sym("code_CE95"),
	0xCE9C: main.sym("code_CE9C"),
	0xCEA3: main.sym("code_CEA3"),
	0xCEBA: main.sym("code_CEBA"),
	0xCEC3: main.sym("code_CEC3"),
	0xCF67: main.sym("code_CF67"),
	0xCFCA: main.sym("_CFCA"),
	0xD019: main.sym("code_D019"),
	0xD02F: main.sym("_D02F"),
	0xD03F: main.sym("code_D03F"),
	0xD0B4: main.sym("code_D0B4"),
	0xD139: main.sym("code_D139"),
	0xD15A: main.sym("code_D15A"),
	0xD17C: main.sym("code_D17C"),
	0xD18B: main.sym("code_D18B"),
	0xD202: main.sym("code_D202"),
	0xD27F: main.sym("_D27F"),
	0xD2DF: main.sym("_D2DF"),
	0xD301: main.sym("code_D301"),
	0xD328: main.sym("Rand"),
	0xD34A: main.sym("code_D34A"),
	0xD37D: main.sym("_D37D"),
	0xD3A8: main.sym("code_D3A8"),
	0xD3F9: main.sym("code_D3F9"),
	0xD40B: main.sym("code_D40B"),
	0xD448: main.sym("code_D448"),
	0xD451: main.sym("code_D451"),
	0xD45C: main.sym("code_D45C"),
	0xD47D: main.sym("code_D47D"),
	0xD491: main.sym("code_D491"),
	0xD496: main.sym("code_D496"),
	0xD49B: main.sym("code_D49B"),
	0xD4A0: main.sym("code_D4A0"),
	0xD4AF: main.sym("code_D4AF"),
	0xD4D4: main.sym("_D4D4"),
	0xD4F5: main.sym("_D4F5"),
	0xD4FE: main.sym("code_D4FE"),
	0xD508: main.sym("code_D508"),
	0xD518: main.sym("_D518"),
	0xD56E: main.sym("code_D56E"),
	0xD58C: main.sym("code_D58C"),
	0xD593: main.sym("code_D593"),
	0xD5BE: main.sym("code_D5BE"),
	0xD5D5: main.sym("code_D5D5"),
	0xD5DC: main.sym("code_D5DC"),
	0xD5E5: main.sym("code_D5E5"),
	0xD5E6: main.sym("code_D5E6"),
	0xD5EC: main.sym("code_D5EC"),
	0xD60F: main.sym("code_D60F"),
	0xD61D: main.sym("code_D61D"),
	0xD672: main.sym("code_D672"),
	0xD67F: main.sym("code_D67F"),
	0xD69A: main.sym("code_D69A"),
	0xD6BA: main.sym("code_D6BA"),
	0xD73C: main.sym("_D73C"),
	0xD789: main.sym("code_D789"),
	0xD79D: main.sym("code_D79D"),
	0xD7AA: main.sym("_D7AA"),
	0xD7C2: main.sym("_D7C2"),
	0xD80E: main.sym("_D80E"),
	0xD851: main.sym("_D851"),
	0xD855: main.sym("_D855"),
	0xD877: main.sym("_D877"),
	0xD885: main.sym("_D885"),
	0xD904: main.sym("_D904"),
	0xD90D: main.sym("code_D90D"),
	0xD93C: main.sym("_D93C"),
	0xD979: main.sym("_D979"),
	0xD990: main.sym("code_D990"),
	0xD9B3: main.sym("data_D9B3"),
	0xD9B6: main.sym("code_D9B6"),
	0xD9B7: main.sym("_D9B7"),
	0xD9C5: main.sym("code_D9C5"),
	0xD9C9: main.sym("_D9C9"),
	0xD9E0: main.sym("code_D9E0"),
	0xD9EA: main.sym("code_D9EA"),
	0xD9FE: main.sym("code_D9FE"),
	0xDA7E: main.sym("_DA7E"),
	0xDB1E: main.sym("code_DB1E"),
	0xDB2D: main.sym("code_DB2D"),
	0xDB34: main.sym("code_DB34"),
	0xDB53: main.sym("code_DB53"),
	0xDBFF: main.sym("code_DBFF"),
	0xDC38: main.sym("_DC38"),
	0xDC75: main.sym("code_DC75"),
	0xDCCE: main.sym("_DCCE"),
	0xDCEA: main.sym("_DCEA"),
	0xDDB0: main.sym("scoretab"),
	0xDDB6: main.sym("_DDB6"),
	0xDDC7: main.sym("_DDC7"),
	0xDDE0: main.sym("code_DDE0"),
	0xDE0E: main.sym("_DE0E"),
	0xDE2F: main.sym("_DE2F"),
	0xDE83: main.sym("code_DE83"),
	0xDEA3: main.sym("code_DEA3"),
	0xDEAF: main.sym("code_DEAF"),
	0xDEEC: main.sym("code_DEEC"),
	0xDF9D: main.sym("code_DF9D"),
	0xDFAC: main.sym("code_DFAC"),
	0xDFB0: main.sym("code_DFB0"),
	0xDFBA: main.sym("code_DFBA"),
	0xDFBD: main.sym("code_DFBD"),
	0xDFC4: main.sym("code_DFC4"),
	0xDFD3: main.sym("code_DFD3"),
	0xDFF8: main.sym("code_DFF8"),
	0xE078: main.sym("str_mario_game_over"),
	0xE088: main.sym("str_game_over"),
	0xE098: main.sym("str_luigi_game_over"),
	0xE0A8: main.sym("str_clear_game_over"),
	0xE0B8: main.sym("code_E0B8"),
	0xE0D0: main.sym("phaseseq"),
	0xE111: main.sym("phaseloop", flag={"LOCAL"}),
	0xE129: main.sym("code_E129"),
	0xE132: main.sym("code_E132"),
	0xE13D: main.sym("code_E13D"),
	0xE14A: main.sym("code_E14A"),
	0xE1CE: main.sym("code_E1CE"),
	0xE1EC: main.sym("_E1EC"),
	0xE1F7: main.sym("code_E1F7"),
	0xE21A: main.sym("code_E21A"),
	0xE24E: main.sym("_E24E"),
	0xE26D: main.sym("code_E26D"),
	0xE28B: main.sym("code_E28B"),
	0xE29A: main.sym("_E29A"),
	0xE2AB: main.sym("code_E2AB"),
	0xE2FD: main.sym("_E2FD"),
	0xE333: main.sym("_E333"),
	0xE3DD: main.sym("_E3DD"),
	0xE3E3: main.sym("_E3E3"),
	0xE41E: main.sym("_E41E"),
	0xE453: main.sym("code_E453"),
	0xE464: main.sym("code_E464"),
	0xE48A: main.sym("code_E48A"),
	0xE49A: main.sym("code_E49A"),
	0xE4AA: main.sym("code_E4AA"),
	0xE51A: main.sym("code_E51A"),
	0xE554: main.sym("code_E554"),
	0xE568: main.sym("str_mario"),
	0xE56E: main.sym("str_luigi"),
	0xE574: main.sym("data_E574"),
	0xE5A4: main.sym("str_perfect"),
	0xE5AD: main.sym("str_5000pts"),
	0xE5B6: main.sym("str_3000pts"),
	0xE5BF: main.sym("str_no_bonus"),
	0xE5CE: main.sym("code_E5CE"),
	0xE646: main.sym("code_E646"),
	0xE670: main.sym("code_E670"),
	0xE6B8: main.sym("code_E6B8"),
	0xE6C5: main.sym("data_E6C5"),
	0xE6E5: main.sym("data_E6E5"),
	0xE6E6: main.sym("data_E6E5+1"),
	0xE6E7: main.sym("data_E6E5+2"),
	0xE703: main.sym("str_x_800"),
	0xE709: main.sym("code_E709"),
	0xE73E: main.sym("code_E73E"),
	0xE772: main.sym("code_E772"),
	0xE783: main.sym("code_E783"),
	0xE795: main.sym("code_E795"),
	0xE7E4: main.sym("_E7E4"),
	0xE805: main.sym("_E805"),
	0xE824: main.sym("_E824"),
	0xE842: main.sym("_E842"),
	0xE86B: main.sym("_E86B"),
	0xE883: main.sym("_E883"),
	0xE8BE: main.sym("_E8BE"),
	0xE911: main.sym("_E911"),
	0xE952: main.sym("_E952"),
	0xE95E: main.sym("code_E95E"),
	0xE96D: main.sym("code_E96D"),
	0xE973: main.sym("code_E973"),
	0xE97A: main.sym("code_E97A"),
	0xE9A0: main.sym("code_E9A0"),
	0xE9AC: main.sym("code_E9AC"),
	0xE9B8: main.sym("_E9B8"),
	0xE9D3: main.sym("code_E9D3"),
	0xE9F2: main.sym("code_E9F2"),
	0xE9FA: main.sym("code_E9FA"),
	0xEA25: main.sym("code_EA25"),
	0xEA31: main.sym("code_EA31"),
	0xEA87: main.sym("_EA87"),
	0xEADF: main.sym("_EADF"),
	0xEB6B: main.sym("_EB6B"),
	0xEBBC: main.sym("_EBBC"),
	0xEBCC: main.sym("_EBCC"),
	0xEBE9: main.sym("_EBE9"),
	0xEBF2: main.sym("_EBF2"),
	0xEC14: main.sym("_EC14"),
	0xEC30: main.sym("_EC30"),
	0xEC67: main.sym("code_EC67"),
	0xECA2: main.sym("_ECA2"),
	0xECAF: main.sym("code_ECAF"),
	0xECCC: main.sym("data_ECCC"),
	0xECEC: main.sym("_ECEC"),
	0xEDA9: main.sym("_EDA9"),
	0xEDEB: main.sym("code_EDEB"),
	0xEE53: main.sym("data_EE53"),
	0xEE6A: main.sym("code_EE6A"),
	0xEE82: main.sym("code_EE82"),
	0xEEA5: main.sym("code_EEA5"),
	0xEEAD: main.sym("code_EEAD"),
	0xEEBC: main.sym("code_EEBC"),
	0xEECC: main.sym("code_EECC"),
	0xEEE3: main.sym("code_EEE3"),
	0xEF32: main.sym("code_EF32"),
	0xEF50: main.sym("code_EF50"),
	0xEF67: main.sym("data_EF67"),
	0xEF97: main.sym("data_EF97"),
	0xEF9D: main.sym("data_EF9D"),
	0xEFBB: main.sym("data_EFBB"),
	0xEFDB: main.sym("data_EFDB"),
	0xF006: main.sym("data_F006"),
	0xF01B: main.sym("data_F01B"),
	0xF061: main.sym("data_F061"),
	0xF081: main.sym("data_F081"),
	0xF089: main.sym("data_F089"),
	0xF0A1: main.sym("data_F0A1"),
	0xF0A5: main.sym("data_F0A5"),
	0xF1E7: main.sym("data_F1E7"),
	0xF203: main.sym("data_F203"),
	0xF227: main.sym("data_F227"),
	0xF23F: main.sym("data_F23F"),
	0xF266: main.sym("data_F266"),
	0xF276: main.sym("data_F276"),
	0xF286: main.sym("data_F286"),
	0xF296: main.sym("data_F296"),
	0xF2A6: main.sym("data_F2A6"),
	0xF2B9: main.sym("data_F2B9"),
	0xF2C6: main.sym("data_F2C6"),
	0xF2D0: main.sym("data_F2D0"),
	0xF2DA: main.sym("data_F2DA"),
	0xF2E1: main.sym("data_F2E1"),
	0xF2E8: main.sym("data_F2E8"),
	0xF2EC: main.sym("data_F2EC"),
	0xF32C: main.sym("data_F32C"),
	0xF33A: main.sym("data_F33A"),
	0xF350: main.sym("data_F350"),
	0xF36D: main.sym("data_F36D"),
	0xF370: main.sym("data_F370"),
	0xF37B: main.sym("data_F37B"),
	0xF393: main.sym("data_F393"),
	0xF3BA: main.sym("data_F3BA"),
	0xF3D2: main.sym("data_F3D2"),
	0xF3D9: main.sym("data_F3D9"),
	0xF3E4: main.sym("data_F3E4"),
	0xF3ED: main.sym("data_F3ED"),
	0xF3FA: main.sym("data_F3FA"),
	0xF403: main.sym("data_F403"),
	0xF40E: main.sym("data_F40E"),
	0xF419: main.sym("data_F419"),
	0xF424: main.sym("data_F424"),
	0xF431: main.sym("data_F431"),
	0xF43E: main.sym("data_F43E"),
	0xF449: main.sym("data_F449"),
	0xF452: main.sym("data_F452"),
	0xF4B2: main.sym("data_F4B2"),
	0xF4F5: main.sym("data_F4F5"),
	0xF560: main.sym("data_F560"),
	0xF574: main.sym("data_F574"),
	0xF575: main.sym("data_F574+1"),
	0xF584: main.sym("data_F584"),
	0xF58C: main.sym("data_F58C"),
	0xF596: main.sym("data_F596"),
	0xF59E: main.sym("data_F59E"),
	0xF5A4: main.sym("data_F5A4"),
	0xF5AA: main.sym("data_F5AA"),
	0xF5AD: main.sym("data_F5AD"),
	0xF5BD: main.sym("data_F5BD"),
	0xF5CA: main.sym("data_F5CA"),
	0xF5EA: main.sym("data_F5EA"),
	0xF608: main.sym("data_F608"),
	0xF626: main.sym("data_F626"),
	0xF638: main.sym("data_F638"),
	0xF643: main.sym("data_F643"),
	0xF64C: main.sym("data_F64C"),
	0xF64D: main.sym("data_F64D"),
	0xF660: main.sym("data_F660"),
	0xF66B: main.sym("data_F66B"),
	0xF671: main.sym("data_F671"),
	0xF689: main.sym("data_F689"),
	0xF68D: main.sym("data_F68D"),
	0xF699: main.sym("data_F699"),
	0xF6A9: main.sym("data_F6A9"),
	0xF6C8: main.sym("data_F6C8"),
	0xF6E8: main.sym("data_F6E8"),
	0xF70F: main.sym("data_F70F"),
	0xF722: main.sym("data_F722"),
	0xF735: main.sym("data_F735"),
	0xF763: main.sym("data_F763"),
	0xF76D: main.sym("data_F76D"),
	0xF77B: main.sym("data_F77B"),
	0xF78B: main.sym("data_F78B"),
	0xF79B: main.sym("data_F79B"),
	0xF7A4: main.sym("data_F7A4"),
	0xF7B3: main.sym("data_F7B3"),
	0xF7C2: main.sym("data_F7C2"),
	0xF7CB: main.sym("data_F7CB"),
	0xF7DA: main.sym("data_F7DA"),
	0xF7E9: main.sym("data_F7E9"),
	0xF81C: main.sym("data_F81C"),
	0xF823: main.sym("data_F823"),
	0xF854: main.sym("data_F854"),

	# src/audio.s
	0xF8A7: main.sym("AudioProc", flag={"GLOBL"}),
	0xF8C2: main.sym("code_F8C2"),
	0xF8C6: main.sym("code_F8C6"),
	0xF8C8: main.sym("code_F8C8"),
	0xF8CF: main.sym("code_F8CF"),
	0xF8D5: main.sym("code_F8D5"),
	0xF8D8: main.sym("code_F8D8"),
	0xF8EC: main.sym("code_F8EC"),
	0xF8EF: main.sym("code_F8EF"),
	0xF8F3: main.sym("code_F8F3"),
	0xF8F9: main.sym("data_F8FA-1"),
	0xF8FA: main.sym("data_F8FA"),
	0xF900: main.sym("data_F900"),
	0xF901: main.sym("data_F900+1"),
	0xF94E: main.sym("data_F94E"),
	0xF96B: main.sym("code_F96B"),
	0xF96D: main.sym("code_F96D"),
	0xF974: main.sym("code_F974"),
	0xF978: main.sym("code_F978"),
	0xF979: main.sym("code_F979"),
	0xF981: main.sym("code_F981"),
	0xF987: main.sym("code_F987"),
	0xF991: main.sym("data_F992-1"),
	0xF992: main.sym("data_F992"),
	0xF997: main.sym("data_F998-1"),
	0xF998: main.sym("data_F998"),
	0xF99D: main.sym("data_F99E-1"),
	0xF99E: main.sym("data_F99E"),
	0xF9A2: main.sym("_F9A2"),
	0xF9B5: main.sym("_F9B5"),
	0xFA1E: main.sym("_FA1E"),
	0xFA91: main.sym("code_FA91"),
	0xFAEB: main.sym("_FAEB"),
	0xFAEF: main.sym("_FAEF"),
	0xFB32: main.sym("data_FB32"),
	0xFB3A: main.sym("data_FB3A"),
	0xFB3E: main.sym("_FB3E"),
	0xFB48: main.sym("_FB48"),
	0xFBEC: main.sym("_FBEC"),
	0xFC38: main.sym("_FC38"),
	0xFCA7: main.sym("_FCA7"),
	0xFCC9: main.sym("_FCC9"),
	0xFD27: main.sym("_FD27"),
	0xFE64: main.sym("data_FE64"),
	0xFE65: main.sym("data_FE64+1"),
	0xFE66: main.sym("data_FE64+2"),
	0xFE67: main.sym("data_FE64+3"),
	0xFE68: main.sym("data_FE64+4"),
	0xFE69: main.sym("data_FE64+5"),
	0xFE95: main.sym("data_FE95"),
	0xFED1: main.sym("data_FED1"),
	0xFEE6: main.sym("data_FEE6"),
	0xFEF3: main.sym("data_FEF3"),
	0xFEFC: main.sym("data_FEFC"),
	0xFF0B: main.sym("data_FF0B"),
	0xFF0D: main.sym("data_FF0D"),
	0xFF44: main.sym("data_FF44"),

	0x2000: main.sym("PPUCTRL"),
	0x2001: main.sym("PPUMASK"),
	0x2002: main.sym("PPUSTATUS"),
	0x2003: main.sym("OAMADDR"),
	0x2005: main.sym("PPUSCROLL"),
	0x2006: main.sym("PPUADDR"),
	0x2007: main.sym("PPUDATA"),
	0x4000: main.sym("AP1CTRL"),
	0x4001: main.sym("AP1SWEEP"),
	0x4002: main.sym("AP1TIMER"),
	0x4003: main.sym("AP1LENGTH"),
	0x4004: main.sym("AP2CTRL"),
	0x4005: main.sym("AP2SWEEP"),
	0x4006: main.sym("AP2TIMER"),
	0x4007: main.sym("AP2LENGTH"),
	0x4008: main.sym("APTCTRL"),
	0x400A: main.sym("APTTIMER"),
	0x400B: main.sym("APTLENGTH"),
	0x400C: main.sym("APNCTRL"),
	0x400E: main.sym("APNTIMER"),
	0x400F: main.sym("APNLENGTH"),
	0x4010: main.sym("DMCCTRL"),
	0x4011: main.sym("DMCDELTA"),
	0x4014: main.sym("OAMDMA"),
	0x4015: main.sym("APUCTRL"),
	0x4016: main.sym("CONTP1"),
	0x4017: main.sym("DMCFRAME"),
}

imm_PRG = {
	# src/main.s
	0xC277: i_lo(sym_PRG, 0xF350),
	0xC279: i_hi(sym_PRG, 0xF350),
	0xC2A7: i_lo(sym_PRG, 0xF33A),
	0xC2A9: i_hi(sym_PRG, 0xF33A),
	0xC2FB: i_lo(sym_PRG, 0xF350),
	0xC2FD: i_hi(sym_PRG, 0xF350),
	0xC32E: i_lo(sym_PRG, 0xF33A),
	0xC330: i_hi(sym_PRG, 0xF33A),
	0xC6B6: i_lo(sym_PRG, 0xF59E),
	0xC6B8: i_hi(sym_PRG, 0xF59E),
	0xC6C9: i_lo(sym_PRG, 0xF5A4),
	0xC6CB: i_hi(sym_PRG, 0xF5A4),
	0xC7A7: i_lo(sym_PRG, 0xF36D),
	0xC7A9: i_hi(sym_PRG, 0xF36D),
	0xC7AF: i_lo(sym_PRG, 0xF370),
	0xC7B1: i_hi(sym_PRG, 0xF370),
	0xC811: i_lo(sym_PRG, 0xF350),
	0xC815: i_hi(sym_PRG, 0xF350),
	0xC976: i_lo(sym_PRG, 0xF32C),
	0xC978: i_hi(sym_PRG, 0xF32C),
	0xC987: i_lo(sym_PRG, 0xF37B),
	0xC989: i_hi(sym_PRG, 0xF37B),
	0xC98E: i_lo(sym_PRG, 0xF33A),
	0xC990: i_hi(sym_PRG, 0xF33A),
	0xCA3B: i_lo(sym_PRG, 0xF23F),
	0xCA3D: i_hi(sym_PRG, 0xF23F),
	0xCA42: i_lo(sym_PRG, 0xF266),
	0xCA44: i_hi(sym_PRG, 0xF266),
	0xCA4E: i_lo(sym_PRG, 0xF276),
	0xCA50: i_hi(sym_PRG, 0xF276),
	0xCA5A: i_lo(sym_PRG, 0xF286),
	0xCA5C: i_hi(sym_PRG, 0xF286),
	0xCA6D: i_lo(sym_PRG, 0xF227),
	0xCA6F: i_hi(sym_PRG, 0xF227),
	0xCA73: i_lo(sym_PRG, 0xF203),
	0xCA75: i_hi(sym_PRG, 0xF203),
	0xCAB9: i_lo(sym_PRG, 0xF393),
	0xCABD: i_hi(sym_PRG, 0xF393),
	0xCBC8: i_hi(sym_PRG, 0xF296),
	0xCBCC: i_lo(sym_PRG, 0xF296),
	0xCF06: i_lo(sym_PRG, 0xF452),
	0xCF0A: i_hi(sym_PRG, 0xF452),
	0xD414: i_lo(sym_PRG, 0xF0A5),
	0xD416: i_hi(sym_PRG, 0xF0A5),
	0xD423: i_lo(sym_PRG, 0xF689),
	0xD427: i_hi(sym_PRG, 0xF689),
	0xD58C: i_lo(sym_PRG, 0xF4F5),
	0xD58E: i_hi(sym_PRG, 0xF4F5),
	0xD5A0: i_lo(sym_PRG, 0xF560),
	0xD5A4: i_hi(sym_PRG, 0xF560),
	0xD5BE: i_lo(sym_PRG, 0xF660),
	0xD5C0: i_hi(sym_PRG, 0xF660),
	0xD5D1: i_lo(sym_PRG, 0xF66B),
	0xD5D3: i_hi(sym_PRG, 0xF66B),
	0xD66B: i_lo(sym_PRG, 0xF735),
	0xD66D: i_hi(sym_PRG, 0xF735),
	0xD69A: i_lo(sym_PRG, 0xF3BA),
	0xD69E: i_hi(sym_PRG, 0xF3BA),
	0xD6C2: i_lo(sym_PRG, 0xF584),
	0xD6C4: i_hi(sym_PRG, 0xF584),
	0xD6CA: i_lo(sym_PRG, 0xF58C),
	0xD6CC: i_hi(sym_PRG, 0xF58C),
	0xD6D2: i_lo(sym_PRG, 0xF596),
	0xD6D4: i_hi(sym_PRG, 0xF596),
	0xD6DA: i_lo(sym_PRG, 0xF59E),
	0xD6DC: i_hi(sym_PRG, 0xF59E),
	0xD6E2: i_lo(sym_PRG, 0xF5A4),
	0xD6E4: i_hi(sym_PRG, 0xF5A4),
	0xD727: i_lo(sym_PRG, 0xF5AD),
	0xD72B: i_hi(sym_PRG, 0xF5AD),
	0xDA2A: i_lo(sym_PRG, 0xF64D),
	0xDA2C: i_hi(sym_PRG, 0xF64D),
	0xDA40: i_lo(sym_PRG, 0xF643),
	0xDA42: i_hi(sym_PRG, 0xF643),
	0xDA94: i_lo(sym_PRG, 0xF37B),
	0xDA96: i_hi(sym_PRG, 0xF37B),
	0xDC59: i_lo(sym_PRG, 0xF37B),
	0xDC5D: i_hi(sym_PRG, 0xF37B),
	0xDCFA: i_lo(sym_PRG, 0xF6A9),
	0xDCFC: i_hi(sym_PRG, 0xF6A9),
	0xDD48: i_lo(sym_PRG, 0xF7E9),
	0xDD4E: i_hi(sym_PRG, 0xF7E9),
	0xE001: i_lo(sym_PRG, 0xE0A8),
	0xE003: i_hi(sym_PRG, 0xE0A8),
	0xE023: i_lo(sym_PRG, 0xE088),
	0xE025: i_hi(sym_PRG, 0xE088),
	0xE038: i_lo(sym_PRG, 0xE078),
	0xE03A: i_hi(sym_PRG, 0xE078),
	0xE069: i_lo(sym_PRG, 0xE098),
	0xE06B: i_hi(sym_PRG, 0xE098),
	0xE18C: ("#(phaseloop-phaseseq)",),
	0xE403: i_lo(sym_PRG, 0xF6E8),
	0xE407: i_hi(sym_PRG, 0xF6E8),
	0xE4B1: i_lo(sym_PRG, 0xE5BF),
	0xE4B3: i_hi(sym_PRG, 0xE5BF),
	0xE4B9: i_lo(sym_PRG, 0xE5AD),
	0xE4BB: i_hi(sym_PRG, 0xE5AD),
	0xE4C3: i_lo(sym_PRG, 0xE5B6),
	0xE4C5: i_hi(sym_PRG, 0xE5B6),
	0xE4FC: i_lo(sym_PRG, 0xE5A4),
	0xE4FE: i_hi(sym_PRG, 0xE5A4),
	0xE52C: i_lo(sym_PRG, 0xE568),
	0xE52E: i_hi(sym_PRG, 0xE568),
	0xE562: i_lo(sym_PRG, 0xE56E),
	0xE564: i_hi(sym_PRG, 0xE56E),
	0xE681: i_lo(sym_PRG, 0xE703),
	0xE685: i_hi(sym_PRG, 0xE703),
	0xE83E: i_lo(sym_PRG, 0xEFDB),
	0xE840: i_hi(sym_PRG, 0xEFDB),
	0xE883: i_lo(sym_PRG, 0xF01B),
	0xE885: i_hi(sym_PRG, 0xF01B),
	0xE957: i_lo(sym_PRG, 0xF006),
	0xE959: i_hi(sym_PRG, 0xF006),
	0xE9C6: i_lo(sym_PRG, 0xF006),
	0xE9CB: i_hi(sym_PRG, 0xF006),
	0xEA83: i_lo(sym_PRG, 0xEF9D),
	0xEA85: i_hi(sym_PRG, 0xEF9D),
	0xEBEB: i_lo(sym_PRG, 0xF006),
	0xEBED: i_hi(sym_PRG, 0xF006),
}

sym = {
	"PRG": sym_PRG,
}

imm = {
	"PRG": imm_PRG,
}

macro = [
]

def d_hladdr_prc(self):
	hi = self.u8()
	lo = self.u8()
	x = hvc.sym(self, hi << 8 | lo, 2)
	return ">%s,<%s" % (x, x)

d_hladdr = [".byte", d_hladdr_prc]

src_main = [
	[main.s_str, ".include \"hvc.inc\"\n"],
	[main.s_str, ".include \"ma.inc\"\n"],
	[main.s_str, "\n"],
	[hvc.asm.s_code, "PRG", 0xC000, 0xC510, 0, 0],
	[hvc.asm.s_data, "PRG", 0xC510, 0xC528, 0, [[12, 1, hvc.asm.d_addr]]],
	[hvc.asm.s_code, "PRG", 0xC528, 0xC593, 0, 0],
	[hvc.asm.s_data, "PRG", 0xC593, 0xC5A3, 0, [[8, 1, hvc.asm.d_addr]]],
	[hvc.asm.s_code, "PRG", 0xC5A3, 0xD9B3, 0, 0],
	[hvc.asm.s_data, "PRG", 0xD9B3, 0xD9B6, 0, [[1, 3, hvc.asm.d_byte]]],
	[hvc.asm.s_code, "PRG", 0xD9B6, 0xDDB0, 0, 0],
	[hvc.asm.s_data, "PRG", 0xDDB0, 0xDDB4, 0, [[1, 4, hvc.asm.d_byte]]],
	[hvc.asm.s_code, "PRG", 0xDDB4, 0xE078, 0, 0],
	[hvc.asm.s_data, "PRG", 0xE078, 0xE0B8, 0, [
		[4, 16, hvc.asm.d_byte], # str
	]],
	[hvc.asm.s_code, "PRG", 0xE0B8, 0xE0D0, 0, 0],
	[hvc.asm.s_data, "PRG", 0xE0D0, 0xE129, 0, [
		[2, 4, hvc.asm.d_byte], [1, 3, hvc.asm.d_byte],
		[4, 4, hvc.asm.d_byte], [1, 3, hvc.asm.d_byte],
		[4, 4, hvc.asm.d_byte], [1, 3, hvc.asm.d_byte],
		[4, 4, hvc.asm.d_byte], [1, 3, hvc.asm.d_byte],
		[4, 4, hvc.asm.d_byte], [1, 1, hvc.asm.d_byte],
		[1, 4, hvc.asm.d_byte],
	]],
	[hvc.asm.s_code, "PRG", 0xE129, 0xE45C, 0, 0],
	[hvc.asm.s_data, "PRG", 0xE45C, 0xE464, 0, [[4, 1, hvc.asm.d_addr]]],
	[hvc.asm.s_code, "PRG", 0xE464, 0xE494, 0, 0],
	[hvc.asm.s_data, "PRG", 0xE494, 0xE49A, 0, [[3, 1, hvc.asm.d_addr]]],
	[hvc.asm.s_code, "PRG", 0xE49A, 0xE4A4, 0, 0],
	[hvc.asm.s_data, "PRG", 0xE4A4, 0xE4AA, 0, [[3, 1, hvc.asm.d_addr]]],
	[hvc.asm.s_code, "PRG", 0xE4AA, 0xE568, 0, 0],
	[hvc.asm.s_data, "PRG", 0xE568, 0xE5CE, 0, [
		[2, 6, hvc.asm.d_byte], # str
		[12, 4, hvc.asm.d_byte],
		[3, 9, hvc.asm.d_byte], # str
		[1, 15, hvc.asm.d_byte], # str
	]],
	[hvc.asm.s_code, "PRG", 0xE5CE, 0xE6C5, 0, 0],
	[hvc.asm.s_data, "PRG", 0xE6C5, 0xE709, 0, [
		[1, 12, hvc.asm.d_byte], [1, 1, hvc.asm.d_addr], [1, 2, hvc.asm.d_byte], [1, 16, hvc.asm.d_byte], # actor
		[10, 3, hvc.asm.d_byte],
		[1, 6, hvc.asm.d_byte], # str
	]],
	[hvc.asm.s_code, "PRG", 0xE709, 0xECCC, 0, 0],
	[hvc.asm.s_data, "PRG", 0xECCC, 0xECEC, 0, [
		[1, 12, hvc.asm.d_byte], [1, 1, hvc.asm.d_addr], [1, 2, hvc.asm.d_byte], [1, 16, hvc.asm.d_byte], # actor
	]],
	[hvc.asm.s_code, "PRG", 0xECEC, 0xEE53, 0, 0],
	[hvc.asm.s_data, "PRG", 0xEE53, 0xEE6A, 0, [
		[4, 1, d_hladdr], [1, 1, hvc.asm.d_byte],
		[3, 1, d_hladdr], [1, 1, hvc.asm.d_byte],
		[3, 1, d_hladdr], [1, 1, hvc.asm.d_byte],
	]],
	[hvc.asm.s_code, "PRG", 0xEE6A, 0xEF67, 0, 0],
	[hvc.asm.s_data, "PRG", 0xEF67, 0xF87C, 0, [
		[12, 4, hvc.asm.d_byte],
		[1, 6, hvc.asm.d_byte],
		[3, 8, hvc.asm.d_byte], [1, 6, hvc.asm.d_byte], # anime
		[1, 12, hvc.asm.d_byte], [1, 1, hvc.asm.d_addr], [1, 2, hvc.asm.d_byte], [1, 16, hvc.asm.d_byte], # actor
		[5, 8, hvc.asm.d_byte], [1, 3, hvc.asm.d_byte], # anime
		[1, 6, hvc.asm.d_byte], # anime
		[1, 8, hvc.asm.d_byte], [1, 7, hvc.asm.d_byte], # anime
		[8, 8, hvc.asm.d_byte], [1, 6, hvc.asm.d_byte],
		[1, 12, hvc.asm.d_byte], [1, 1, hvc.asm.d_addr], [1, 2, hvc.asm.d_byte], [1, 16, hvc.asm.d_byte], # actor
		[1, 8, hvc.asm.d_byte],
		[3, 8, hvc.asm.d_byte],
		[1, 4, hvc.asm.d_byte],

		# VRAM command
		[8, 5, hvc.asm.d_byte],
		[4, 4, hvc.asm.d_byte],
		[2, 14, hvc.asm.d_byte],
		[6, 11, hvc.asm.d_byte],
		[2, 14, hvc.asm.d_byte],
		[8, 9, hvc.asm.d_byte],
		[1, 16, hvc.asm.d_byte], [1, 9, hvc.asm.d_byte], # too long?
		[1, 16, hvc.asm.d_byte],
		[2, 9, hvc.asm.d_byte],
		[3, 4, hvc.asm.d_byte],
		[1, 1, hvc.asm.d_byte],
		# VRAM command
		[7, 3, hvc.asm.d_byte],
		[1, 1, hvc.asm.d_byte],
		# VRAM command
		[2, 3, hvc.asm.d_byte],
		# VRAM command
		[1, 3, hvc.asm.d_byte],
		[8, 4, hvc.asm.d_byte],
		[1, 1, hvc.asm.d_byte],
		# VRAM command
		[1, 3, hvc.asm.d_byte],
		[5, 4, hvc.asm.d_byte],
		[1, 1, hvc.asm.d_byte],
		# VRAM command
		[1, 3, hvc.asm.d_byte],
		[2, 8, hvc.asm.d_byte],
		[1, 3, hvc.asm.d_byte],
		[2, 8, hvc.asm.d_byte],
		[1, 1, hvc.asm.d_byte],
		# VRAM command
		[1, 4, hvc.asm.d_byte],
		[1, 3, hvc.asm.d_byte],
		[1, 8, hvc.asm.d_byte],
		[1, 1, hvc.asm.d_byte],
		# VRAM command
		[1, 4, hvc.asm.d_byte],
		[1, 3, hvc.asm.d_byte],
		[1, 8, hvc.asm.d_byte],
		[1, 1, hvc.asm.d_byte],
		# VRAM command
		[1, 4, hvc.asm.d_byte],
		[1, 3, hvc.asm.d_byte],
		[1, 8, hvc.asm.d_byte],
		[1, 1, hvc.asm.d_byte],
		[8, 1, hvc.asm.d_addr],

		[2, 8, hvc.asm.d_byte], [1, 3, hvc.asm.d_byte],
		[1, 8, hvc.asm.d_byte], [1, 5, hvc.asm.d_byte],
		[1, 8, hvc.asm.d_byte], [1, 2, hvc.asm.d_byte],
		[1, 8, hvc.asm.d_byte], [1, 2, hvc.asm.d_byte],
		[1, 7, hvc.asm.d_byte],
		[1, 7, hvc.asm.d_byte],
		[1, 4, hvc.asm.d_byte],
		[1, 12, hvc.asm.d_byte], [1, 1, hvc.asm.d_addr], [1, 2, hvc.asm.d_byte], [1, 16, hvc.asm.d_byte], # actor
		[1, 12, hvc.asm.d_byte], [1, 1, hvc.asm.d_addr], [1, 2, hvc.asm.d_byte], [1, 16, hvc.asm.d_byte], # actor
		[1, 8, hvc.asm.d_byte], [1, 6, hvc.asm.d_byte],
		[2, 8, hvc.asm.d_byte], [1, 6, hvc.asm.d_byte],
		[3, 8, hvc.asm.d_byte], [1, 5, hvc.asm.d_byte],
		[1, 3, hvc.asm.d_byte],
		[1, 11, hvc.asm.d_byte],
		[3, 8, hvc.asm.d_byte],
		[3, 3, hvc.asm.d_byte], [1, 1, hvc.asm.d_byte],
		[3, 3, hvc.asm.d_byte], [1, 1, hvc.asm.d_byte],
		[6, 3, hvc.asm.d_byte], [1, 1, hvc.asm.d_byte],
		[12, 1, hvc.asm.d_addr],
		[3, 2, hvc.asm.d_byte], [1, 1, hvc.asm.d_byte],
		[5, 2, hvc.asm.d_byte], [1, 1, hvc.asm.d_byte],
		[4, 2, hvc.asm.d_byte], [1, 1, hvc.asm.d_byte],
		[6, 2, hvc.asm.d_byte], [1, 1, hvc.asm.d_byte],
		[4, 2, hvc.asm.d_byte], [1, 1, hvc.asm.d_byte],
		[5, 2, hvc.asm.d_byte], [1, 1, hvc.asm.d_byte],
		[5, 2, hvc.asm.d_byte], [1, 1, hvc.asm.d_byte],
		[5, 2, hvc.asm.d_byte], [1, 1, hvc.asm.d_byte],
		[6, 2, hvc.asm.d_byte], [1, 1, hvc.asm.d_byte],
		[6, 2, hvc.asm.d_byte], [1, 1, hvc.asm.d_byte],
		[5, 2, hvc.asm.d_byte], [1, 1, hvc.asm.d_byte],
		[4, 2, hvc.asm.d_byte], [1, 1, hvc.asm.d_byte],
		[1, 12, hvc.asm.d_byte], [1, 1, hvc.asm.d_addr], [1, 2, hvc.asm.d_byte], [1, 16, hvc.asm.d_byte], # actor
		[1, 12, hvc.asm.d_byte], [1, 1, hvc.asm.d_addr], [1, 2, hvc.asm.d_byte], [1, 16, hvc.asm.d_byte], # actor
		[1, 12, hvc.asm.d_byte], [1, 1, hvc.asm.d_addr], [1, 2, hvc.asm.d_byte], [1, 16, hvc.asm.d_byte], # actor

		[1, 6, hvc.asm.d_byte], # animeloop
		[1, 4, hvc.asm.d_byte], # animeloop
		[1, 6, hvc.asm.d_byte], # animeloop
		[1, 10, hvc.asm.d_byte], # animeloop
		[1, 10, hvc.asm.d_byte], # animeloop
		[1, 8, hvc.asm.d_byte], # animeloop
		[1, 7, hvc.asm.d_byte], # animeloop
		[1, 5, hvc.asm.d_byte], # animeloop
		[1, 5, hvc.asm.d_byte], # animeloop
		[1, 6, hvc.asm.d_byte], # animeloop

		# VRAM command
		[1, 7, hvc.asm.d_byte],
		[1, 9, hvc.asm.d_byte],
		[1, 9, hvc.asm.d_byte],
		[1, 7, hvc.asm.d_byte],
		[1, 7, hvc.asm.d_byte],
		[1, 9, hvc.asm.d_byte],
		[1, 9, hvc.asm.d_byte],
		[1, 7, hvc.asm.d_byte],
		[1, 7, hvc.asm.d_byte],
		[1, 7, hvc.asm.d_byte],
		[1, 7, hvc.asm.d_byte],
		[1, 7, hvc.asm.d_byte],
		[1, 7, hvc.asm.d_byte],
		[1, 7, hvc.asm.d_byte],
		[1, 1, hvc.asm.d_byte],

		[4, 5, hvc.asm.d_byte],
		[8, 1, hvc.asm.d_word],

		[1, 2, hvc.asm.d_addr], [1, 4, hvc.asm.d_byte],
		[1, 2, hvc.asm.d_addr], [1, 6, hvc.asm.d_byte],
		[1, 2, hvc.asm.d_addr], [1, 4, hvc.asm.d_byte],
		[1, 2, hvc.asm.d_addr], [1, 2, hvc.asm.d_byte],
		[1, 2, hvc.asm.d_addr], [1, 2, hvc.asm.d_byte],

		[1, 3, hvc.asm.d_byte],
		[1, 16, hvc.asm.d_byte],
		[1, 13, hvc.asm.d_byte],

		[11, 2, hvc.asm.d_byte],
		[1, 1, hvc.asm.d_byte],
		[4, 2, hvc.asm.d_byte],
		[1, 1, hvc.asm.d_byte],

		[10, 2, hvc.asm.d_byte],
		[1, 1, hvc.asm.d_byte],
		[4, 2, hvc.asm.d_byte],
		[1, 1, hvc.asm.d_byte],

		[9, 2, hvc.asm.d_byte],
		[1, 1, hvc.asm.d_byte],
		[5, 2, hvc.asm.d_byte],
		[1, 1, hvc.asm.d_byte],

		[1, 5, hvc.asm.d_byte], [1, 4, hvc.asm.d_byte],
		[1, 5, hvc.asm.d_byte], [1, 4, hvc.asm.d_byte],
		[1, 4, hvc.asm.d_byte],
		[1, 4, hvc.asm.d_byte],
		[1, 3, hvc.asm.d_byte],
		[1, 9, hvc.asm.d_byte],
		[1, 1, hvc.asm.d_byte],
		[2, 8, hvc.asm.d_byte], [1, 3, hvc.asm.d_byte],

		# VRAM command
		[1, 4, hvc.asm.d_byte],
		[1, 6, hvc.asm.d_byte],
		[1, 1, hvc.asm.d_byte],
		# VRAM command
		[1, 5, hvc.asm.d_byte],
		[1, 1, hvc.asm.d_byte],

		[6, 4, hvc.asm.d_byte],
		[1, 4, hvc.asm.d_byte],

		[3, 4, hvc.asm.d_byte],

		[4, 4, hvc.asm.d_byte],

		[3, 8, hvc.asm.d_byte], [1, 7, hvc.asm.d_byte],

		[1, 12, hvc.asm.d_byte], [1, 1, hvc.asm.d_addr], [1, 2, hvc.asm.d_byte], [1, 16, hvc.asm.d_byte], # actor

		[2, 6, hvc.asm.d_byte],
		[1, 8, hvc.asm.d_byte],
		[1, 10, hvc.asm.d_byte],
		[1, 9, hvc.asm.d_byte],

		[2, 6, hvc.asm.d_byte],
		[1, 7, hvc.asm.d_byte],

		# VRAM command
		[1, 11, hvc.asm.d_byte],
		[1, 7, hvc.asm.d_byte],
		[1, 1, hvc.asm.d_byte],
		# VRAM command
		[1, 3, hvc.asm.d_byte], [1, 15, hvc.asm.d_byte],
		[1, 3, hvc.asm.d_byte], [1, 6, hvc.asm.d_byte],
		[1, 3, hvc.asm.d_byte], [1, 6, hvc.asm.d_byte],
		[1, 3, hvc.asm.d_byte], [1, 6, hvc.asm.d_byte],
		[1, 1, hvc.asm.d_byte],
		# VRAM command
		[1, 4, hvc.asm.d_byte],
		[1, 5, hvc.asm.d_byte],
		[1, 1, hvc.asm.d_byte],
		# VRAM command
		[1, 4, hvc.asm.d_byte],
		[1, 4, hvc.asm.d_byte],
		[1, 5, hvc.asm.d_byte],
		[1, 1, hvc.asm.d_byte],
		# VRAM command
		[1, 4, hvc.asm.d_byte],
		[1, 4, hvc.asm.d_byte],
		[1, 7, hvc.asm.d_byte],
		[1, 1, hvc.asm.d_byte],
		# VRAM command
		[1, 4, hvc.asm.d_byte],
		[1, 4, hvc.asm.d_byte],
		[1, 7, hvc.asm.d_byte],
		[1, 1, hvc.asm.d_byte],
		# VRAM command
		[1, 4, hvc.asm.d_byte],
		[1, 4, hvc.asm.d_byte],
		[1, 1, hvc.asm.d_byte],
		# VRAM command
		[1, 4, hvc.asm.d_byte],
		[1, 4, hvc.asm.d_byte],
		[1, 6, hvc.asm.d_byte],
		[1, 1, hvc.asm.d_byte],
		# VRAM command
		[1, 4, hvc.asm.d_byte],
		[1, 4, hvc.asm.d_byte],
		[1, 6, hvc.asm.d_byte],
		[1, 1, hvc.asm.d_byte],
		# VRAM command
		[1, 4, hvc.asm.d_byte],
		[1, 4, hvc.asm.d_byte],
		[1, 1, hvc.asm.d_byte],
		# VRAM command
		[1, 4, hvc.asm.d_byte],
		[1, 4, hvc.asm.d_byte],
		[1, 6, hvc.asm.d_byte],
		[1, 1, hvc.asm.d_byte],
		# VRAM command
		[1, 4, hvc.asm.d_byte],
		[1, 4, hvc.asm.d_byte],
		[1, 6, hvc.asm.d_byte],
		[1, 1, hvc.asm.d_byte],

		[25, 2, hvc.asm.d_byte], [1, 1, hvc.asm.d_byte],
		[1, 7, hvc.asm.d_byte],

		[24, 2, hvc.asm.d_byte], [1, 1, hvc.asm.d_byte], # demo
		[20, 2, hvc.asm.d_byte], [1, 1, hvc.asm.d_byte], # demo
	]],

	s_segment("VECTOR"),
	[hvc.asm.s_data, "PRG", 0xFFFA, 0x10000, 0, [[3, 1, hvc.asm.d_addr]]],
]

src_audio = [
	[main.s_str, ".include \"hvc.inc\"\n\n"],
	s_segment("AUDIO"),
	[main.s_str, "\n"],
	[hvc.asm.s_code, "PRG", 0xF8A7, 0xF8FA, 0, 0],
	[hvc.asm.s_data, "PRG", 0xF8FA, 0xF96B, 0, [
		[1, 6, hvc.asm.d_byte], # unknown
		[39, 2, hvc.asm.d_byte], # unknown
		[3, 8, hvc.asm.d_byte], [1, 5, hvc.asm.d_byte], # unknown
	]], # unknown
	[hvc.asm.s_code, "PRG", 0xF96B, 0xF992, 0, 0],
	[hvc.asm.s_data, "PRG", 0xF992, 0xF9A2, 0, [
		[2, 6, hvc.asm.d_byte], # unknown
		[1, 4, hvc.asm.d_byte], # unknown
	]],
	[hvc.asm.s_code, "PRG", 0xF9A2, 0xFB32, 0, 0],
	[hvc.asm.s_data, "PRG", 0xFB32, 0xFB3E, 0, [
		[1, 8, hvc.asm.d_byte], # unknown
		[1, 4, hvc.asm.d_byte], # unknown
	]], # unknown
	[hvc.asm.s_code, "PRG", 0xFB3E, 0xFE64, 0, 0],
	[main.s_str, """
.macro music arg0, arg1, arg2, arg3
	.byte arg0
	.addr arg1
	.byte arg2
	.byte arg3
.endmacro

"""],
	[hvc.asm.s_data, "PRG", 0xFE64, 0xFFFA, 0, [
		[1, 8, hvc.asm.d_byte], # offset
		[8, 1, ["music", lambda self: "$%02X,%s,$%02X,$%02X" % (
			self.u8(), hvc.aw(self), self.u8(), self.u8(),
		)]],
		[1, 1, hvc.asm.d_byte],
		[2, 8, hvc.asm.d_byte], [1, 3, hvc.asm.d_byte],
		[3, 8, hvc.asm.d_byte], [1, 5, hvc.asm.d_byte],
		[1, 8, hvc.asm.d_byte], [1, 4, hvc.asm.d_byte],
		[1, 8, hvc.asm.d_byte],
		[1, 8, hvc.asm.d_byte], [1, 5, hvc.asm.d_byte],
		[1, 10, hvc.asm.d_byte],
		[1, 3, hvc.asm.d_byte],
		[1, 9, hvc.asm.d_byte],
		[1, 3, hvc.asm.d_byte],
		[1, 12, hvc.asm.d_byte],
		[1, 2, hvc.asm.d_byte],
		[3, 8, hvc.asm.d_byte],
		[3, 8, hvc.asm.d_byte], [1, 7, hvc.asm.d_byte],
		[3, 8, hvc.asm.d_byte], [1, 7, hvc.asm.d_byte],
		[3, 8, hvc.asm.d_byte], [1, 1, hvc.asm.d_byte],
		[8, 8, hvc.asm.d_byte], [1, 6, hvc.asm.d_byte],
		[7, 8, hvc.asm.d_byte],
	]],
]

src_chr = [
	s_segment("CHR"),
	[main.s_str, ".incbin \"chr.bin\"\n"],
	[main.s_bin, "CHR", 0x0000, 0x2000, ["chr.bin"]],
]

lst = [
	[main.s_segment, ["donor", "HMA.nes"], [
		(0x0010, 0x4010, 0xC000, "PRG"),
		(0x4010, 0x6010, 0x0000, "CHR"),
	]],
	[main.s_copy, ["include"], ["include"]],
	[main.s_copy, ["src"], ["src"]],
	[main.s_dir, "src"],
		[main.s_file, "main.s"],
			[main.s_call, src_main],
		[main.s_write],
		[main.s_file, "audio.s"],
			[main.s_call, src_audio],
		[main.s_write],
		[main.s_file, "chr.s"],
			[main.s_call, src_chr],
		[main.s_write],
	[main.s_pop],
	[main.s_copy, ["hvc.ld"], ["hvc.ld"]],
	[main.s_copy, ["makefile"], ["makefile"]],
]
