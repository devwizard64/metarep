import os
import struct

import main
import hvc
from hvc.meta import *

sym_J0_00 = {
	0x8004: main.sym("start", {"GLOBL"}),
	0x81B1: main.sym("nmi", {"GLOBL","A16","I16"}),
	0x8292: main.sym("_8292"),
	0x83C1: main.sym("_83C1"),
	0x83E6: main.sym("data_83E6"),
	0x83E8: main.sym("data_83E8"),
	0x83EA: main.sym("data_83EA"),
	0x83EC: main.sym("data_83EC"),
	0x83EE: main.sym("data_83EC+2"),
	0x8404: main.sym("data_8404"),
	0x8406: main.sym("data_8404+2"),
	0x84A2: main.sym("irq", {"GLOBL","A16","I16"}),
	0x84BB: main.sym("code_84BB", {"GLOBL"}),
	0x84BE: main.sym("code_84BE", {"GLOBL"}),
	0x84D8: main.sym("code_84D8"),
	0x84FD: main.sym("code_84FD"),
	0x850A: main.sym("code_850A"),
	0x8519: main.sym("code_8519", {"GLOBL"}),
	0x853A: main.sym("code_853A", {"GLOBL"}),
	0x8554: main.sym("code_8554", {"GLOBL"}),
	0x857B: main.sym("code_857B", {"GLOBL"}),
	0x85A0: main.sym("code_85A0", {"GLOBL"}),
	0x85C7: main.sym("code_85C7"),
	0x85EA: main.sym("code_85EA"),
	0x8658: main.sym("code_8658"),
	0x869A: main.sym("data_869D-3"),
	0x869C: main.sym("data_869D-1"),
	0x869D: main.sym("data_869D"),
	0x869F: main.sym("data_869D+2"),
	0x86E5: main.sym("code_86E5", {"GLOBL"}), # MEM
	0x8744: main.sym("code_8744"),
	0x875A: main.sym("code_875A", {"GLOBL"}),
	0x87B3: main.sym("code_87B3"),
	0x87DA: main.sym("code_87DA"),
	0x880C: main.sym("code_880C", {"GLOBL"}),
	0x8865: main.sym("code_8865"),
	0x8889: main.sym("code_8889"),
	0x889A: main.sym("code_889A", {"GLOBL"}), # HAL
	0x88C3: main.sym("code_88C3"),
	0x88DF: main.sym("_88DF"),
	0x88F8: main.sym("_88F8", {"A8"}),
	0x8983: main.sym("_8983"),
	0x89F7: main.sym("code_89F7"),
	0x8A06: main.sym("code_8A06"),
	0x8A56: main.sym("code_8A56"),
	0x8A9C: main.sym("code_8A9C"),
	0x8A9F: main.sym("code_8A9F", {"GLOBL"}),
	0x8AB3: main.sym("code_8AB3"),
	0x8B3D: main.sym("data_8B3D"),
	0x8B5D: main.sym("data_8B5D"),
	0x8B64: main.sym("data_8B5D+7"),
	0x8B8D: main.sym("code_8B8D", {"GLOBL"}),
	0x8B9C: main.sym("code_8B9C", {"GLOBL"}),
	0x8BC2: main.sym("code_8BC2"),
	0x8BCF: main.sym("code_8BCF"), # SA-1 start?
	0x8C3F: main.sym("code_8C3F", {"GLOBL"}),
	0x8C57: main.sym("code_8C57", {"GLOBL"}), # JSL SA1
	0x8C6D: main.sym("code_8C6D", {"GLOBL"}), # JSL CPU
	0x8C89: main.sym("_8C8A-1"),
	0x8C8A: main.sym("_8C8A"),
	0x8CFA: main.sym("code_8CFA"),
	0x8D12: main.sym("data_8D12"),
	0x8D28: main.sym("code_8D28"),
	0x8E15: main.sym("code_8E15"),
	0x8E2F: main.sym("code_8E2F", {"GLOBL"}),
	0x8E41: main.sym("_8E41"),
	0x8ED8: main.sym("code_8ED8"),
	0x8F06: main.sym("code_8F06"),
	0x8F07: main.sym("_8F07"),
	0x8F5A: main.sym("data_8F5A"),
	0x8F62: main.sym("code_8F62"),
	0x8F6C: main.sym("code_8F6C"),
	0x8F82: main.sym("code_8F82"),
	0x8F95: main.sym("code_8F95"),
	0x8FA0: main.sym("_8FA1-1"),
	0x8FA1: main.sym("_8FA1"),
	0x900B: main.sym("_900C-1"),
	0x900C: main.sym("_900C"),
	0x9015: main.sym("_9016-1"),
	0x9016: main.sym("_9016"),
	0x9020: main.sym("_9021-1"),
	0x9021: main.sym("_9021"),
	0x9034: main.sym("code_9034"),
	0x90BE: main.sym("_90BE"),
	0x90C9: main.sym("code_90C9"),
	0x90D3: main.sym("code_90D3"),
	0x90E5: main.sym("code_90E5", {"GLOBL"}),
	0x90E9: main.sym("code_90E9"),
	0x9123: main.sym("code_9123"),
	0x914F: main.sym("code_914F"),
	0x9165: main.sym("code_9165"),
	0x9186: main.sym("code_9186"),
	0x91BE: main.sym("code_91BE"),
	0x91DD: main.sym("code_91DD"),
	0x91ED: main.sym("code_91ED"),
	0x91F4: main.sym("code_91F4", {"GLOBL"}),
	0x91FB: main.sym("code_91FB"),
	0x91FE: main.sym("code_91FE"),
	0x9202: main.sym("code_9202"),
	0x9232: main.sym("code_9232"),
	0x9266: main.sym("code_9266"),
	0x9287: main.sym("data_9287"),
	0x92EB: main.sym("data_92EB"),
	0x9335: main.sym("code_9335"),
	0x9369: main.sym("code_9369"),
	0x9384: main.sym("data_9384"),
	0x93F6: main.sym("code_93F6"),
	0x9406: main.sym("code_9406"),
	0x9410: main.sym("code_9410"),
	0x941D: main.sym("code_941D"),
	0x9434: main.sym("code_9434"),
	0x943A: main.sym("code_943A"),
	0x9456: main.sym("code_9456"),
	0x945B: main.sym("code_945B"),
	0x9474: main.sym("code_9474"),
	0x948E: main.sym("code_948E"),
	0x9495: main.sym("code_9495"),
	0x94BC: main.sym("code_94BC"),
	0x94D2: main.sym("code_94D2"),
	0x94E7: main.sym("code_94E7"),
	0x9513: main.sym("code_9513"),
	0x951F: main.sym("code_951F"),
	0x9532: main.sym("code_9532"),
	0x953A: main.sym("code_953A"),
	0x954C: main.sym("code_954C"),
	0x9558: main.sym("code_9558"),
	0x9564: main.sym("code_9564"),
	0x957A: main.sym("code_957A"),
	0x9586: main.sym("code_9586"),
	0x9592: main.sym("code_9592"),
	0x959E: main.sym("code_959E"),
	0x95AE: main.sym("code_95AE"),
	0x95CD: main.sym("code_95CD"),
	0x95E2: main.sym("code_95E2"),
	0x95F5: main.sym("code_95F5"),
	0x960B: main.sym("code_960B"),
	0x961E: main.sym("code_961E"),
	0x963D: main.sym("code_963D"),
	0x964F: main.sym("code_964F"),
	0x9656: main.sym("code_9656"),
	0x9672: main.sym("data_9672"),
	0x967A: main.sym("code_967A"),
	0x967F: main.sym("code_967F"),
	0x9684: main.sym("code_9684"),
	0x968A: main.sym("code_968A"),
	0x968F: main.sym("code_968F"),
	0x96A6: main.sym("code_96A6"),
	0x96BD: main.sym("code_96BD"),
	0x96D4: main.sym("code_96D4"),
	0x96EB: main.sym("code_96EB"),
	0x96FD: main.sym("code_96FD"),
	0x970F: main.sym("code_970F"),
	0x971F: main.sym("code_971F"),
	0x972F: main.sym("code_972F"),
	0x9747: main.sym("code_9747"),
	0x975F: main.sym("code_975F"),
	0x9778: main.sym("code_9778"),
	0x9791: main.sym("code_9791"),
	0x97A9: main.sym("code_97A9"),
	0x97D0: main.sym("code_97D0"),
	0x97F7: main.sym("code_97F7"),
	0x9825: main.sym("code_9825"),
	0x9853: main.sym("code_9853"),
	0x9868: main.sym("code_9868"),
	0x9874: main.sym("code_9874"),
	0x9897: main.sym("_9897"),
	0x98A5: main.sym("code_98A5"),
	0x98D9: main.sym("code_98D9"),
	0x98DF: main.sym("code_98DF"),
	0x98F8: main.sym("code_98F8"),
	0x98FF: main.sym("code_98FF"),
	0x9906: main.sym("code_9906"),
	0x9926: main.sym("code_9926"),
	0x9943: main.sym("code_9943"),
	0x994F: main.sym("code_994F"),
	0x995E: main.sym("code_995E"),
	0x996C: main.sym("code_996C"),
	0x997A: main.sym("code_997A"),
	0x998A: main.sym("code_998A"),
	0x9994: main.sym("code_9994"),
	0x99A0: main.sym("code_99A0"),
	0x99AC: main.sym("code_99AC"),
	0x99B8: main.sym("code_99B8"),
	0x99C4: main.sym("code_99C4"),
	0x99D4: main.sym("code_99D4"),
	0x99E0: main.sym("code_99E0"),
	0x99EC: main.sym("code_99EC"),
	0x99F8: main.sym("code_99F8"),
	0x9A04: main.sym("code_9A04"),
	0x9A14: main.sym("code_9A14"),
	0x9A20: main.sym("code_9A20"),
	0x9A2C: main.sym("code_9A2C"),
	0x9A38: main.sym("code_9A38"),
	0x9A44: main.sym("code_9A44"),
	0x9A50: main.sym("code_9A50"),
	0x9A5C: main.sym("code_9A5C"),
	0x9A68: main.sym("code_9A68"),
	0x9A8E: main.sym("code_9A8E", {"GLOBL"}),
	0x9AC8: main.sym("code_9AC8"),
	0x9AD1: main.sym("code_9AD1"),
	0x9AD7: main.sym("code_9AD7"),
	0x9B08: main.sym("code_9B08"),
	0x9B16: main.sym("code_9B16"),
	0x9B8B: main.sym("code_9B8B"),
	0x9BFF: main.sym("code_9BFF"),
	0x9C0F: main.sym("code_9C0F"),
	0x9C37: main.sym("code_9C37"),
	0x9C3D: main.sym("code_9C3D"),
	0x9C58: main.sym("data_9C58"),
	0x9C5E: main.sym("code_9C5E"),
	0x9C71: main.sym("code_9C71"),
	0x9C92: main.sym("code_9C92"),
	0x9CCF: main.sym("data_9CCF"),
	0x9CD7: main.sym("data_9CD7"),
	0x9CF2: main.sym("_9CF2"),
	0x9D81: main.sym("code_9D81"),
	0x9D99: main.sym("_9D99"),
	0x9E01: main.sym("code_9E01"),
	0x9E05: main.sym("code_9E05"),
	0x9E0F: main.sym("code_9E0F"),
	0x9E19: main.sym("code_9E19"),
	0x9E30: main.sym("code_9E30"),
	0x9E57: main.sym("code_9E57"),
	0x9E7C: main.sym("code_9E7C"),
	0x9F28: main.sym("code_9F28"),
	0x9F49: main.sym("code_9F49"),
	0x9F70: main.sym("code_9F70"),
	0x9F80: main.sym("code_9F80"),
	0x9F8D: main.sym("code_9F8D"),
	0x9FC9: main.sym("code_9FC9"),
	0x9FFB: main.sym("code_9FFB"),
	0xA02B: main.sym("code_A02B"),
	0xA05D: main.sym("code_A05D"),
	0xA0B1: main.sym("code_A0B1"),
	0xA11E: main.sym("code_A11E"),
	0xA196: main.sym("code_A196"),
	0xA1E3: main.sym("code_A1E3"),
	0xA1F3: main.sym("code_A1F3"),
	0xA24F: main.sym("code_A24F"),
	0xA26C: main.sym("code_A26C"),
	0xA508: main.sym("code_A508"),
	0xA51B: main.sym("code_A51B"),
	0xA536: main.sym("code_A536"),
	0xA549: main.sym("code_A549"),
	0xA5AD: main.sym("code_A5AD"),
	0xA5DE: main.sym("code_A5DE"),
	0xA60B: main.sym("code_A60B"),
	0xA624: main.sym("code_A624"),
	0xA66C: main.sym("code_A66C"),
	0xA68F: main.sym("code_A68F"),
	0xA694: main.sym("code_A694"),
	0xA69E: main.sym("code_A69E"),
	0xA6AB: main.sym("code_A6AB"),
	0xA6B6: main.sym("code_A6B6"),
	0xA6C0: main.sym("code_A6C0"),
	0xA6CD: main.sym("code_A6CD"),
	0xA6DA: main.sym("code_A6DA"),
	0xA6E7: main.sym("code_A6E7"),
	0xA706: main.sym("code_A706"),
	0xA72B: main.sym("code_A72B"),
	0xA743: main.sym("code_A743"),
	0xA75B: main.sym("code_A75B"),
	0xA76C: main.sym("code_A76C"),
	0xA77D: main.sym("code_A77D"),
	0xA790: main.sym("code_A790"),
	0xA7A5: main.sym("code_A7A5"),
	0xA7BE: main.sym("code_A7BE"),
	0xA7D5: main.sym("code_A7D5"),
	0xA822: main.sym("code_A822"),
	0xA840: main.sym("code_A840"),
	0xA85D: main.sym("code_A85D"),
	0xA86D: main.sym("code_A86D"),
	0xA875: main.sym("code_A875"),
	0xA89F: main.sym("code_A89F"),
	0xA8C4: main.sym("code_A8C4"),
	0xA8EC: main.sym("_A8ED-1"),
	0xA8ED: main.sym("_A8ED"),
	0xA8EE: main.sym("code_A8EE"),
	0xA90D: main.sym("code_A90D"),
	0xA928: main.sym("code_A928"),
	0xA968: main.sym("code_A968"),
	0xA9C9: main.sym("code_A9C9"),
	0xAA4A: main.sym("code_AA4A"),
	0xAA5D: main.sym("code_AA5D"),
	0xAA78: main.sym("code_AA78"),
	0xAA93: main.sym("code_AA93"),
	0xAAD6: main.sym("code_AAD6"),
	0xAB1B: main.sym("code_AB1B"),
	0xABFE: main.sym("code_ABFE"),
	0xAC10: main.sym("code_AC10"),
	0xAC23: main.sym("code_AC23"),
	0xAC2C: main.sym("code_AC2C"),
	0xAC35: main.sym("code_AC35"),
	0xAC3E: main.sym("code_AC3E"),
	0xAC47: main.sym("code_AC47"),
	0xAC50: main.sym("code_AC50"),
	0xAC59: main.sym("code_AC59"),
	0xAC62: main.sym("code_AC62"),
	0xAC92: main.sym("_AC92"),
	0xAD1C: main.sym("code_AD1C", {"GLOBL"}),
	0xAD20: main.sym("code_AD20"),
	0xAD32: main.sym("code_AD32"),
	0xAD61: main.sym("_AD61"),
	0xADFD: main.sym("code_ADFD"),
	0xAE23: main.sym("_AE23"),
	0xAEB1: main.sym("code_AEB1"),
	0xAED7: main.sym("_AED7"),
	0xAF67: main.sym("code_AF67"),
	0xAF6A: main.sym("code_AF6A"),
	0xAF86: main.sym("code_AF86"),
	0xAF98: main.sym("code_AF98"),
	0xAFA7: main.sym("code_AFA7"),
	0xAFE3: main.sym("code_AFE3"),
	0xB03C: main.sym("code_B03C"),
	0xB045: main.sym("code_B045"),
	0xB09D: main.sym("_B09D"),
	0xB0BA: main.sym("code_B0BA"),
	0xB0F1: main.sym("code_B0F1"),
	0xB141: main.sym("code_B141"),
	0xB17A: main.sym("code_B17A"),
	0xB1DF: main.sym("code_B1DF"),
	0xB2B1: main.sym("code_B2B1"),
	0xB2C8: main.sym("code_B2C8"),
	0xB2F9: main.sym("code_B2F9"),
	0xB32D: main.sym("code_B32D"),
	0xB349: main.sym("code_B349"),
	0xB38C: main.sym("code_B38C"),
	0xB3D4: main.sym("code_B3D4"),
	0xB3F1: main.sym("code_B3F1"),
	0xB42E: main.sym("code_B42E"),
	0xB46D: main.sym("code_B46D"),
	0xB4A5: main.sym("code_B4A5"),
	0xB4CE: main.sym("code_B4CE"),
	0xB50C: main.sym("code_B50C"),
	0xB534: main.sym("code_B534"),
	0xB55C: main.sym("code_B55C"),
	0xB57C: main.sym("code_B57C"),
	0xB598: main.sym("code_B598"),
	0xB59C: main.sym("code_B59C"),
	0xB5C2: main.sym("code_B5C2"),
	0xB5CE: main.sym("code_B5CE"),
	0xB604: main.sym("code_B604"),
	0xB60E: main.sym("code_B60E"),
	0xB618: main.sym("code_B618"),
	0xB624: main.sym("code_B624"),
	0xB65A: main.sym("code_B65A"),
	0xB664: main.sym("code_B664"),
	0xB66E: main.sym("code_B66E"),
	0xB6AA: main.sym("code_B6AA"),
	0xB6C1: main.sym("code_B6C1"),
	0xB6C9: main.sym("_B6C9"),
	0xB74A: main.sym("code_B74A"),
	0xB762: main.sym("data_B762"),
	0xB767: main.sym("data_B767"),
	0xB76C: main.sym("data_B76C"),
	0xB771: main.sym("data_B771"),
	0xB7D8: main.sym("code_B7D8"),
	0xB7F0: main.sym("data_B7F0"),
	0xB7F2: main.sym("data_B7F0+2"),
	0xB838: main.sym("data_B838"),
	0xB83A: main.sym("data_B838+2"),
	0xBBCC: main.sym("_BBCC"),
	0xBC03: main.sym("_BC03"),
	0xBC09: main.sym("code_BC09"),
	0xBC3B: main.sym("code_BC3B"),
	0xBC3E: main.sym("data_BC3E"),
	0xBC40: main.sym("data_BC3E+2"),
	0xBC71: main.sym("_BC71"),
	0xBC81: main.sym("code_BC81"),
	0xBCB1: main.sym("code_BCB1"),
	0xBCDE: main.sym("code_BCDE"),
	0xBD03: main.sym("code_BD03"),
	0xBD13: main.sym("code_BD13"),
	0xBD86: main.sym("code_BD86"),
	0xBE17: main.sym("code_BE17"),
	0xBE3C: main.sym("data_BE3C"), # state table for menu
	0xBE45: main.sym("code_BE45"),
	0xBE66: main.sym("data_BE66"),
	0xBE6C: main.sym("code_BE6C"),
	0xBF58: main.sym("data_BF58"),
	0xBF5F: main.sym("data_BF5F"),
	0xBF66: main.sym("code_BF66"),
	0xBF6B: main.sym("code_BF6B"),
	0xBF8B: main.sym("data_BF8B"),
	0xBF99: main.sym("code_BF99"),
	0xBFA0: main.sym("code_BFA0"),
	0xC04F: main.sym("code_C04F"),
	0xC056: main.sym("code_C056"),
	0xC05D: main.sym("code_C05D"),
	0xC0AB: main.sym("code_C0AB"),
	0xC169: main.sym("code_C169"),
	0xC177: main.sym("code_C177"),
	0xC17B: main.sym("_C17B"),
	0xC1B8: main.sym("_C1B8"),
	0xC247: main.sym("data_C247"),
	0xC251: main.sym("code_C251"),
	0xC304: main.sym("_C304"),
	0xC30B: main.sym("code_C30B"),
	0xC324: main.sym("data_C324"),
	0xC345: main.sym("data_C345"),
	0xC347: main.sym("code_C347"),
	0xC35C: main.sym("data_C35C"),
	0xC36E: main.sym("code_C36E"),
	0xC375: main.sym("code_C375"),
	0xC37C: main.sym("code_C37C"),
	0xC383: main.sym("code_C383"),
	0xC3C3: main.sym("code_C3C3"),
	0xC3D2: main.sym("code_C3D2"),
	0xC408: main.sym("code_C408"),
	0xC439: main.sym("code_C439"),
	0xC48C: main.sym("code_C48C"),
	0xC4B7: main.sym("code_C4B7"),
	0xC584: main.sym("code_C584"),
	0xC59C: main.sym("code_C59C"),
	0xC5F2: main.sym("code_C5F2"),
	0xC6DE: main.sym("data_C6DE"),
	0xC6E5: main.sym("code_C6E5"),
	0xC6FF: main.sym("code_C6FF"),
	0xC719: main.sym("code_C719"),
	0xC78F: main.sym("code_C78F"),
	0xC7F1: main.sym("data_C7F1"),
	0xC7F7: main.sym("code_C7F7"),
	0xC80A: main.sym("code_C80A"),
	0xC902: main.sym("code_C902"),
	0xC912: main.sym("_C912"),
	0xC926: main.sym("data_C926"),
	0xC92E: main.sym("code_C92E"),
	0xC94A: main.sym("code_C94A"),
	0xC955: main.sym("code_C955"),
	0xC95C: main.sym("code_C95C"),
	0xC960: main.sym("code_C960"),
	0xC970: main.sym("data_C970"),
	0xC971: main.sym("data_C970+1"),
	0xC972: main.sym("data_C970+2"),
	0xC973: main.sym("data_C970+3"),
	0xC974: main.sym("data_C970+4"),
	0xC975: main.sym("data_C970+5"),
	0xC976: main.sym("data_C970+6"),
	0xC977: main.sym("data_C970+7"),
	0xC979: main.sym("data_C970+9"),
	0xC97B: main.sym("data_C970+11"),
	0xCA9C: main.sym("code_CA9C"),
	0xCABA: main.sym("code_CABA"),
	0xCAFB: main.sym("code_CAFB"),
	0xCB12: main.sym("_CB12"),
	0xCB39: main.sym("code_CB39"),
	0xCB61: main.sym("code_CB61"),
	0xCB89: main.sym("code_CB89"),
	0xCBFC: main.sym("code_CBFC"),
	0xCC10: main.sym("code_CC10"),
	0xCC46: main.sym("code_CC46"),
	0xCCFA: main.sym("_CCFA"),
	0xCD05: main.sym("data_CD05"),
	0xCD1E: main.sym("code_CD1E"),
	0xCDCB: main.sym("code_CDCB", {"A16","I16"}),
	0xCDD8: main.sym("code_CDD8"),
	0xCDEE: main.sym("code_CDEE"),
	0xCDFC: main.sym("code_CDFC", {"GLOBL"}),
	0xCE35: main.sym("code_CE35"),
	0xCE40: main.sym("code_CE40", {"GLOBL"}),
	0xCE4B: main.sym("code_CE4B"),
	0xCED4: main.sym("code_CED4"),
	0xCEE3: main.sym("code_CEE3"),
	0xCF31: main.sym("code_CF31"),
	0xCF4B: main.sym("_CF4B", {"A8","I8"}),
	0xCF8B: main.sym("code_CF8B"),
	0xCF95: main.sym("code_CF95"),
	0xCF98: main.sym("code_CF98", {"GLOBL"}),
	0xCFB0: main.sym("code_CFB0"),
	0xCFD8: main.sym("_CFD8", {"A8","I8"}),
	0xD032: main.sym("code_D032"),
	0xD099: main.sym("code_D099"),
	0xD0BF: main.sym("code_D0BF"),
	0xD0C2: main.sym("code_D0C2", {"GLOBL"}),
	0xD0E8: main.sym("_D0E8", {"A8","I8"}),
	0xD155: main.sym("code_D155"),
	0xD292: main.sym("code_D292"),
	0xD29E: main.sym("code_D29E"),
	0xD2C9: main.sym("code_D2C9"),
	0xD2E2: main.sym("code_D2E2", {"A8","I8"}),
	0xD3E9: main.sym("_D3E9"),
	0xD4DF: main.sym("code_D4DF"),
	0xD4E1: main.sym("code_D4E1"),
	0xD4EE: main.sym("code_D4EE", {"A16","I16"}),
	0xD55E: main.sym("code_D55E"),
	0xD599: main.sym("code_D599"),
	0xD5CA: main.sym("code_D5CA"),
	0xD62F: main.sym("data_D632-3"),
	0xD631: main.sym("data_D632-1"),
	0xD632: main.sym("data_D632"),
	0xD698: main.sym("data_D698"),
	0xD69A: main.sym("data_D698+2"),
	0xD69B: main.sym("data_D69B"),
	0xD69D: main.sym("data_D69B+2"),
	0xD6B9: main.sym("data_D6B9"),
	0xD6BB: main.sym("data_D6B9+2"),
	0xD77C: main.sym("data_D77C"),
	0xD7BD: main.sym("code_D7BD"),
	0xD810: main.sym("code_D810"),
	0xD814: main.sym("code_D814"),
	0xD818: main.sym("code_D818"),
	0xD873: main.sym("code_D873"),
	0xD880: main.sym("code_D880"),
	0xD8C3: main.sym("code_D8C3"),
	0xD8D0: main.sym("code_D8D0"),
	0xD93B: main.sym("code_D93B"),
	0xD959: main.sym("code_D959"),
	0xD9FB: main.sym("code_D9FB"),
	0xDA2C: main.sym("code_DA2C"),
	0xDA38: main.sym("code_DA38", {"GLOBL"}),
	0xDAE9: main.sym("code_DAE9"),
	0xDAFC: main.sym("code_DAFC"),
	0xDB27: main.sym("code_DB27"),
	0xDB45: main.sym("code_DB45"),
	0xDBE7: main.sym("_DBE7"),
	0xDC18: main.sym("data_DC18"),
	0xDC24: main.sym("_DC24"),
	0xDC7F: main.sym("_DC7F"),
	0xDC9A: main.sym("_DC9A"),
	0xDCCE: main.sym("code_DCCE"),
	0xDCE0: main.sym("code_DCE0"),
	0xDCF5: main.sym("code_DCF5"),
	0xDD0A: main.sym("code_DD0A"),
	0xDD1F: main.sym("code_DD1F"),
	0xDD34: main.sym("code_DD34"),
	0xDDA7: main.sym("data_DDA7"),
	0xDDB0: main.sym("data_DDB0"),
	0xDDB2: main.sym("data_DDB2"),
	0xDDE7: main.sym("_DDE8-1"),
	0xDDE8: main.sym("_DDE8"),
	0xE114: main.sym("_E114"),
	0xE116: main.sym("_E116"),
	0xE1AA: main.sym("_E1AA"),
	0xE3FA: main.sym("code_E3FA"),
	0xE41F: main.sym("code_E41F"),
	0xE427: main.sym("code_E427"),
	0xE42F: main.sym("code_E42F"),
	0xE437: main.sym("code_E437"),
	0xE4C0: main.sym("code_E4C0"),
	0xE5D5: main.sym("code_E5D5"),
	0xE5DD: main.sym("code_E5DD"),
	0xE661: main.sym("_E661"),
	0xE7DE: main.sym("code_E7DE"),
	0xE80E: main.sym("code_E80E"),
	0xE81C: main.sym("code_E81C"),
	0xE83A: main.sym("code_E83A"),
	0xE856: main.sym("code_E856"),
	0xE88B: main.sym("code_E88B"),
	0xE8AF: main.sym("code_E8AF"),
	0xE8E7: main.sym("code_E8E7"),
	0xE90C: main.sym("code_E90C"),
	0xE917: main.sym("code_E917"),
	0xE925: main.sym("code_E925"),
	0xE92C: main.sym("code_E92C"),
	0xE94C: main.sym("code_E94C"),
	0xE959: main.sym("code_E959"),
	0xE977: main.sym("code_E977"),
	0xE9AF: main.sym("code_E9AF"),
	0xE9B3: main.sym("code_E9B3"),
	0xE9D2: main.sym("code_E9D2"),
	0xE9D6: main.sym("code_E9D6"),
	0xE9F3: main.sym("code_E9F3"),
	0xE9F7: main.sym("code_E9F7", {"GLOBL"}),
	0xEA06: main.sym("code_EA06"),
	0xEA23: main.sym("data_EA23"),
	0xEA45: main.sym("code_EA45"),
	0xEA5D: main.sym("data_EA5D"),
	0xEA73: main.sym("code_EA73"),
	0xEA82: main.sym("code_EA82"),
	0xEA91: main.sym("code_EA91"),
	0xEAA0: main.sym("code_EAA0"),
	0xEAF1: main.sym("code_EAF1"),
	0xEB2E: main.sym("code_EB2E"),
	0xEB3A: main.sym("code_EB3A"),
	0xEB49: main.sym("code_EB49"),
	0xEB62: main.sym("code_EB62"),
	0xEB6E: main.sym("code_EB6E"),
	0xEB7C: main.sym("code_EB7C"),
	0xEBC9: main.sym("_EBC9"),
	0xEBD7: main.sym("code_EBD7"),
	0xEBE4: main.sym("data_EBE4"),
	0xED73: main.sym("data_ED73"),
	0xED7A: main.sym("data_ED7A"),
	0xEDB8: main.sym("code_EDB8"),
	0xEDC2: main.sym("data_EDC2"),
	0xEDC8: main.sym("code_EDC8"),
	0xEDDF: main.sym("code_EDDF"),
	0xEDF6: main.sym("code_EDF6"),
	0xEE51: main.sym("code_EE51"),
	0xEEA4: main.sym("code_EEA4"),
	0xEEAB: main.sym("code_EEAB"),
	0xEEC6: main.sym("data_EEC6"),
	0xEEC9: main.sym("code_EEC9"),
	0xEEFA: main.sym("code_EEFA"),
	0xF082: main.sym("data_F082"),
	0xF088: main.sym("data_F088"),
	0xF091: main.sym("code_F091"),
	0xF0D2: main.sym("code_F0D2"),
	0xF0F6: main.sym("code_F0F6"),
}

sym_E0_00 = {
	0x8C92: main.sym("code_8C6D"),
	0x8D37: main.sym("code_8D37_E0"),
	0x8D4F: main.sym("data_8D4F_E0"),
}

sym_J0_01 = {
	0x018000: main.sym("code_018000", {"GLOBL"}),
	0x01806B: main.sym("code_01806B"),
	0x018078: main.sym("code_018078", {"GLOBL"}),
	0x018088: main.sym("code_018088", {"GLOBL"}),
	0x0180DB: main.sym("code_0180DB"),
	0x0180FE: main.sym("code_0180FE"),
	0x018101: main.sym("code_018101", {"GLOBL"}),
	0x01810D: main.sym("code_01810D"),
	0x01813A: main.sym("code_01813A"),
	0x01816A: main.sym("code_01816A"),
	0x01819C: main.sym("code_01819C"),
	0x0181C0: main.sym("data_0181C0"),
	0x0181C6: main.sym("code_0181C6"),
	0x018215: main.sym("_018215"),
	0x018263: main.sym("code_018263"),
	0x018268: main.sym("code_018268"),
	0x018284: main.sym("code_018284"),
	0x01829A: main.sym("code_01829A"),
	0x018307: main.sym("code_018307"),
	0x0183BC: main.sym("data_0183BC"),
	0x0183CA: main.sym("code_0183CA"),
	0x0183D4: main.sym("code_0183D4"),
	0x018479: main.sym("data_018479", {"GLOBL"}),
	0x018482: main.sym("data_018482"),
	0x0184BF: main.sym("data_0184BF"),
	0x0184D1: main.sym("data_0184D1"),
	0x0184DE: main.sym("code_0184DE"),
	0x018531: main.sym("code_018531"),
	0x018571: main.sym("code_018571"),
	0x018574: main.sym("data_018574"),
	0x01857A: main.sym("code_01857A"),
	0x018581: main.sym("code_018581"),
	0x01858B: main.sym("code_01858B"),
	0x01859A: main.sym("code_01859A"),
	0x018610: main.sym("data_018610"),
	0x018643: main.sym("data_018643"),
	0x018654: main.sym("_018654"),
	0x01865F: main.sym("_01865F"),
	0x018678: main.sym("code_018678"),
	0x018698: main.sym("code_018698"),
	0x01873B: main.sym("_01873B"),
	0x01875A: main.sym("data_01875A"),
	0x0187AE: main.sym("_0187AE"),
	0x0187B6: main.sym("code_0187B6"),
	0x0187DF: main.sym("code_0187DF"),
	0x018876: main.sym("code_018876"),
	0x0188A5: main.sym("code_0188A5"),
	0x0188DA: main.sym("code_0188DA"),
	0x01897B: main.sym("data_01897B"),
	0x0189A3: main.sym("data_0189A3"),
	0x0189CB: main.sym("data_0189CB"),
	0x0189F3: main.sym("code_0189F3"),
	0x018A6D: main.sym("code_018A6D"),
	0x018A96: main.sym("_018A96"),
	0x018B1E: main.sym("data_018B1E"),
	0x018B30: main.sym("code_018B30"),
	0x018B3D: main.sym("code_018B3D"),
	0x018BD7: main.sym("code_018BD7"),
	0x018BEE: main.sym("code_018BEE"),
	0x018C4E: main.sym("code_018C4E"),
	0x018C74: main.sym("code_018C74"),
	0x018E52: main.sym("code_018E52"),
	0x018E99: main.sym("code_018E99"),
	0x018F2E: main.sym("data_018F2E"),
	0x018F40: main.sym("code_018F40"),
	0x018F89: main.sym("code_018F89"),
	0x018FF7: main.sym("code_018FF7"),
	0x019031: main.sym("code_019031"),
	0x019062: main.sym("code_019062"),
	0x0190D7: main.sym("code_0190D7"),
	0x019146: main.sym("code_019146"),
	0x0191E1: main.sym("_0191E1"),
	0x01925E: main.sym("code_01925E"),
	0x0192BC: main.sym("code_0192BC"),
	0x019336: main.sym("_019336"),
	0x01936F: main.sym("code_01936F"),
	0x0193A0: main.sym("_0193A0"),
	0x0193D9: main.sym("code_0193D9"),
	0x0193F4: main.sym("code_0193F4"),
	0x01942F: main.sym("_01942F"),
	0x0194A2: main.sym("code_0194A2"),
	0x01956D: main.sym("code_01956D"),
	0x0195FA: main.sym("_0195FA"),
	0x019693: main.sym("_019693"),
	0x019709: main.sym("_019709"),
	0x0197EE: main.sym("_0197EE"),
	0x01983A: main.sym("code_01983A"),
	0x019888: main.sym("code_019888"),
	0x01991A: main.sym("code_01991A"),
	0x019941: main.sym("code_019941"),
	0x0199CD: main.sym("code_0199CD"),
	0x019A01: main.sym("code_019A01"),
	0x019A09: main.sym("_019A09"),
	0x019A15: main.sym("data_019A15"),
	0x019A21: main.sym("code_019A21"),
	0x019A36: main.sym("code_019A36"),
	0x019A47: main.sym("_019A47"),
	0x019A77: main.sym("code_019A77"),
	0x019A7C: main.sym("code_019A7C"),
	0x019ABD: main.sym("code_019ABD"),
	0x019AE5: main.sym("code_019AE5"),
	0x019B27: main.sym("code_019B27"),
	0x019B54: main.sym("code_019B54"),
	0x019B69: main.sym("code_019B69"),
	0x019C48: main.sym("data_019C48"),
	0x019C56: main.sym("data_019C56"),
	0x019CD8: main.sym("code_019CD8"),
	0x019CDB: main.sym("code_019CDB"),
	0x019D44: main.sym("code_019D44"),
	0x019D66: main.sym("code_019D66"),
	0x019D6E: main.sym("code_019D6E"),
	0x019D7F: main.sym("data_019DEF-$70"),
	0x019D91: main.sym("data_019E01-$70"),
	0x019DC0: main.sym("code_019DC0"),
	0x019DEF: main.sym("data_019DEF"),
	0x019E01: main.sym("data_019E01"),
	0x019E13: main.sym("code_019E13"),
	0x019E21: main.sym("code_019E21"),
	0x019E2B: main.sym("code_019E2B"),
	0x019EE8: main.sym("_019EE8"),
	0x019FA5: main.sym("code_019FA5"),
	0x019FE9: main.sym("code_019FE9"),
	0x019FEB: main.sym("code_019FEB"),
	0x01A049: main.sym("data_01A049"),
	0x01A05B: main.sym("data_01A05B"),
	0x01A06D: main.sym("data_01A06D"),
	0x01A07F: main.sym("code_01A07F"),
	0x01A0F6: main.sym("code_01A0F6"),
	0x01A101: main.sym("code_01A101"),
	0x01A17C: main.sym("code_01A17C"),
	0x01A1E1: main.sym("code_01A1E1"),
	0x01A1EC: main.sym("code_01A1EC"),
	0x01A208: main.sym("code_01A208"),
	0x01A265: main.sym("code_01A265"),
	0x01A27D: main.sym("code_01A27D", {"GLOBL"}),
	0x01A2B3: main.sym("code_01A2B3"),
	0x01A2CA: main.sym("code_01A2CA"),
	0x01A2FD: main.sym("code_01A2FD"),
	0x01A3C0: main.sym("code_01A3C0"),
	0x01A42F: main.sym("code_01A42F"),
	0x01A4E9: main.sym("code_01A4E9"),
	0x01A55F: main.sym("code_01A55F"),
	0x01A568: main.sym("data_01A568"),
	0x01A588: main.sym("code_01A588"),
	0x01A58A: main.sym("code_01A58A"),
	0x01A58F: main.sym("code_01A58F"),
	0x01A594: main.sym("code_01A594"),
	0x01A598: main.sym("code_01A598"),
	0x01A59B: main.sym("code_01A59B"),
	0x01A5A4: main.sym("code_01A5A4"),
	0x01A5A6: main.sym("code_01A5A6"),
	0x01A5AE: main.sym("code_01A5AE"),
	0x01A5B1: main.sym("code_01A5B1"),
	0x01A5B9: main.sym("code_01A5B9"),
	0x01A600: main.sym("code_01A600"),
	0x01A630: main.sym("code_01A630"),
	0x01A660: main.sym("code_01A660"),
	0x01A66F: main.sym("code_01A66F"),
	0x01A6AF: main.sym("data_01A6AF"),
	0x01A6B7: main.sym("code_01A6B7"),
	0x01A6CE: main.sym("code_01A6CE"),
	0x01A6E3: main.sym("code_01A6E3"),
	0x01A6FA: main.sym("code_01A6FA"),
	0x01A743: main.sym("code_01A743"),
	0x01A752: main.sym("code_01A752"),
	0x01A795: main.sym("code_01A795"),
	0x01A808: main.sym("data_01A808"),
	0x01A818: main.sym("data_01A818"),
	0x01A98D: main.sym("data_01A98D"),
	0x01A995: main.sym("code_01A995", {"GLOBL"}),
	0x01A9EB: main.sym("_01A9EB"),
	0x01AA9B: main.sym("_01AA9B"),
	0x01AAD2: main.sym("_01AAD2"),
	0x01AB55: main.sym("data_01AB55"),
	0x01AB5D: main.sym("data_01AB5D"),
	0x01AB65: main.sym("data_01AB65"),
	0x01AB6D: main.sym("_01AB6D"),
	0x01AB78: main.sym("_01AB78"),
	0x01AC01: main.sym("_01AC01"),
	0x01AC55: main.sym("_01AC55"),
	0x01AC91: main.sym("data_01AC91"),
	0x01ACAD: main.sym("data_01ACAD"),
	0x01ACBD: main.sym("_01ACBD"),
	0x01ACF2: main.sym("code_01ACF2"),
	0x01ACF5: main.sym("code_01ACF5"),
	0x01ADAA: main.sym("data_01ADAA"),
	0x01ADB2: main.sym("_01ADB2"),
	0x01ADB4: main.sym("_01ADB4"),
	0x01ADBB: main.sym("code_01ADBB"),
	0x01ADEB: main.sym("code_01ADEB"),
	0x01AE1A: main.sym("code_01AE1A"),
	0x01AE4B: main.sym("code_01AE4B"),
	0x01AE7F: main.sym("data_01AE7F"),
	0x01AE87: main.sym("data_01AE87"),
	0x01AED7: main.sym("data_01AED7"),
	0x01AF27: main.sym("data_01AF27"),
	0x01AF77: main.sym("code_01AF77"),
	0x01AFAF: main.sym("data_01AFAF"),
	0x01AFFF: main.sym("data_01AFFF"),
	0x01B04F: main.sym("code_01B04F"),
	0x01B067: main.sym("data_01B067"),
	0x01B08F: main.sym("code_01B08F"),
	0x01B0A6: main.sym("data_01B0A6"),
	0x01B0CE: main.sym("code_01B0CE"),
	0x01B0E6: main.sym("data_01B0E6"),
	0x01B10E: main.sym("code_01B10E"),
	0x01B125: main.sym("data_01B125"),
	0x01B14D: main.sym("code_01B14D"),
	0x01B188: main.sym("data_01B188"),
	0x01B1B0: main.sym("data_01B1B0"),
	0x01B1D8: main.sym("data_01B1D8"),
	0x01B200: main.sym("code_01B200"),
	0x01B23B: main.sym("data_01B23B"),
	0x01B263: main.sym("data_01B263"),
	0x01B28B: main.sym("data_01B28B"),
	0x01B2B3: main.sym("code_01B2B3"),
	0x01B2EE: main.sym("data_01B2EE"),
	0x01B316: main.sym("data_01B316"),
	0x01B33E: main.sym("data_01B33E"),
	0x01B366: main.sym("code_01B366"),
	0x01B3A1: main.sym("data_01B3A1"),
	0x01B3C9: main.sym("data_01B3C9"),
	0x01B3F1: main.sym("data_01B3F1"),
	0x01B419: main.sym("code_01B419"),
	0x01B432: main.sym("code_01B432"),
	0x01B455: main.sym("code_01B455"),
	0x01B476: main.sym("code_01B476"),
	0x01B488: main.sym("code_01B488"),
	0x01B49A: main.sym("code_01B49A"),
	0x01B4E5: main.sym("code_01B4E5"),
	0x01B502: main.sym("code_01B502"),
	0x01B524: main.sym("code_01B524"),
	0x01B541: main.sym("code_01B541"),
	0x01B560: main.sym("code_01B560"),
	0x01B5CE: main.sym("data_01B5CE"),
	0x01B5DE: main.sym("data_01B5DE"),
	0x01B5EE: main.sym("data_01B5EE"),
	0x01B5FE: main.sym("code_01B5FE"),
	0x01B619: main.sym("_01B619"),
	0x01B61C: main.sym("_01B61C"),
	0x01B663: main.sym("data_01B663"),
	0x01B66F: main.sym("_01B66F"),
	0x01B685: main.sym("code_01B685"),
	0x01B742: main.sym("code_01B742"),
	0x01B765: main.sym("code_01B765"),
	0x01B78A: main.sym("code_01B78A"),
	0x01B7C2: main.sym("code_01B7C2"),
	0x01B840: main.sym("code_01B840"),
	0x01B878: main.sym("code_01B878"),
	0x01B8EC: main.sym("_01B8EC"),
	0x01B900: main.sym("code_01B900"),
	0x01B93C: main.sym("code_01B93C"),
	0x01B989: main.sym("data_01B989"),
	0x01B991: main.sym("data_01B991"),
	0x01B9AF: main.sym("data_01B9AF"),
	0x01B9BF: main.sym("_01B9BF"),
	0x01B9C0: main.sym("code_01B9C0"),
	0x01BA14: main.sym("code_01BA14"),
	0x01BA45: main.sym("code_01BA45"),
	0x01BA7E: main.sym("code_01BA7E"),
	0x01BAC6: main.sym("data_01BAC6"),
	0x01BAD2: main.sym("data_01BAD2"),
	0x01BADE: main.sym("code_01BADE"),
	0x01BB09: main.sym("code_01BB09"),
	0x01BB2F: main.sym("code_01BB2F"),
	0x01BB4D: main.sym("code_01BB4D"),
	0x01BB69: main.sym("code_01BB69"),
	0x01BC92: main.sym("data_01BC92"),
	0x01C13B: main.sym("data_01C13B"),
	0x01C13F: main.sym("data_01C13F"),
	0x01C145: main.sym("data_01C145"),
	0x01C153: main.sym("data_01C153"),
	0x01C154: main.sym("data_01C154"),
	0x01C1E0: main.sym("code_01C1E0"),
	0x01C217: main.sym("code_01C217"),
	0x01C23A: main.sym("data_01C23A"),
	0x01C362: main.sym("code_01C362"),
	0x01C38E: main.sym("data_01C38E"),
	0x01C3AE: main.sym("code_01C3AE"),
	0x01C3B3: main.sym("code_01C3B3"),
	0x01C3BF: main.sym("code_01C3BF"),
	0x01C3CE: main.sym("code_01C3CE"),
	0x01C3D9: main.sym("code_01C3D9"),
	0x01C3DE: main.sym("code_01C3DE"),
	0x01C3EE: main.sym("code_01C3EE"),
	0x01C3F2: main.sym("code_01C3F2"),
	0x01C402: main.sym("code_01C402"),
	0x01C407: main.sym("code_01C407"),
	0x01C40C: main.sym("code_01C40C"),
	0x01C423: main.sym("code_01C423"),
	0x01C428: main.sym("code_01C428"),
	0x01C42D: main.sym("code_01C42D"),
	0x01C444: main.sym("code_01C444"),
	0x01C447: main.sym("_01C447"),
	0x01C466: main.sym("data_01C466"),
	0x01C486: main.sym("code_01C486"),
	0x01C48B: main.sym("code_01C48B"),
	0x01C490: main.sym("code_01C490"),
	0x01C49C: main.sym("code_01C49C"),
	0x01C4AB: main.sym("code_01C4AB"),
	0x01C4BA: main.sym("code_01C4BA"),
	0x01C4BF: main.sym("code_01C4BF"),
	0x01C4D3: main.sym("code_01C4D3"),
	0x01C4D7: main.sym("code_01C4D7"),
	0x01C4EB: main.sym("code_01C4EB"),
	0x01C4F0: main.sym("code_01C4F0"),
	0x01C4F5: main.sym("code_01C4F5"),
	0x01C510: main.sym("code_01C510"),
	0x01C515: main.sym("code_01C515"),
	0x01C51A: main.sym("code_01C51A"),
	0x01C535: main.sym("code_01C535"),
	0x01C551: main.sym("data_01C551"),
	0x01C571: main.sym("code_01C571"),
	0x01C576: main.sym("code_01C576"),
	0x01C57B: main.sym("code_01C57B"),
	0x01C587: main.sym("code_01C587"),
	0x01C593: main.sym("code_01C593"),
	0x01C5A2: main.sym("code_01C5A2"),
	0x01C5B1: main.sym("code_01C5B1"),
	0x01C5B6: main.sym("code_01C5B6"),
	0x01C5CA: main.sym("code_01C5CA"),
	0x01C5CE: main.sym("code_01C5CE"),
	0x01C5E2: main.sym("code_01C5E2"),
	0x01C5E7: main.sym("code_01C5E7"),
	0x01C5EC: main.sym("code_01C5EC"),
	0x01C607: main.sym("code_01C607"),
	0x01C60C: main.sym("code_01C60C"),
	0x01C611: main.sym("code_01C611"),
	0x01C62C: main.sym("code_01C62C"),
	0x01C64D: main.sym("data_01C64D"),
	0x01C66D: main.sym("code_01C66D"),
	0x01C680: main.sym("code_01C680"),
	0x01C6A0: main.sym("data_01C6A0"),
	0x01C6C0: main.sym("code_01C6C0"),
	0x01C6D4: main.sym("code_01C6D4"),
	0x01C6EB: main.sym("data_01C6EB"),
	0x01C70B: main.sym("code_01C70B"),
	0x01C717: main.sym("code_01C717"),
	0x01C747: main.sym("data_01C747"),
	0x01C767: main.sym("code_01C767"),
	0x01C776: main.sym("code_01C776"),
	0x01C78F: main.sym("code_01C78F"),
	0x01C7A8: main.sym("code_01C7A8"),
	0x01C7C5: main.sym("code_01C7C5"),
	0x01C7EA: main.sym("code_01C7EA"),
	0x01C80A: main.sym("code_01C80A"),
	0x01C814: main.sym("code_01C814"),
	0x01C81E: main.sym("code_01C81E"),
	0x01C828: main.sym("code_01C828"),
	0x01C845: main.sym("data_01C845"),
	0x01C865: main.sym("code_01C865"),
	0x01C86F: main.sym("code_01C86F"),
	0x01C879: main.sym("code_01C879"),
	0x01C880: main.sym("code_01C880"),
	0x01C883: main.sym("code_01C883"),
	0x01C897: main.sym("code_01C897"),
	0x01C8AA: main.sym("code_01C8AA"),
	0x01C8C4: main.sym("code_01C8C4"),
	0x01C8DE: main.sym("code_01C8DE"),
	0x01C8FF: main.sym("code_01C8FF"),
	0x01C928: main.sym("code_01C928"),
	0x01C94F: main.sym("code_01C94F"),
	0x01C966: main.sym("data_01C966"),
	0x01C986: main.sym("code_01C986"),
	0x01C990: main.sym("code_01C990"),
	0x01C99A: main.sym("code_01C99A"),
	0x01C9A1: main.sym("code_01C9A1"),
	0x01C9AD: main.sym("code_01C9AD"),
	0x01C9B9: main.sym("code_01C9B9"),
	0x01C9CC: main.sym("code_01C9CC"),
	0x01C9E6: main.sym("code_01C9E6"),
	0x01CA00: main.sym("code_01CA00"),
	0x01CA21: main.sym("code_01CA21"),
	0x01CA4D: main.sym("code_01CA4D"),
	0x01CA95: main.sym("data_01CA95"),
	0x01CAB5: main.sym("code_01CAB5"),
	0x01CAC0: main.sym("code_01CAC0"),
	0x01CACA: main.sym("code_01CACA"),
	0x01CAE1: main.sym("code_01CAE1"),
	0x01CAEB: main.sym("code_01CAEB"),
	0x01CAFC: main.sym("code_01CAFC"),
	0x01CB15: main.sym("code_01CB15"),
	0x01CB1F: main.sym("code_01CB1F"),
	0x01CB29: main.sym("code_01CB29"),
	0x01CB33: main.sym("code_01CB33"),
	0x01CB50: main.sym("data_01CB50"),
	0x01CB70: main.sym("code_01CB70"),
	0x01CB79: main.sym("code_01CB79"),
	0x01CB82: main.sym("code_01CB82"),
	0x01CB89: main.sym("code_01CB89"),
	0x01CB8C: main.sym("code_01CB8C"),
	0x01CBA0: main.sym("code_01CBA0"),
	0x01CBAF: main.sym("code_01CBAF"),
	0x01CBB8: main.sym("code_01CBB8"),
	0x01CBD0: main.sym("code_01CBD0"),
	0x01CBD9: main.sym("code_01CBD9"),
	0x01CBE7: main.sym("code_01CBE7"),
	0x01CC03: main.sym("code_01CC03"),
	0x01CC1A: main.sym("data_01CC1A"),
	0x01CC3A: main.sym("code_01CC3A"),
	0x01CC43: main.sym("code_01CC43"),
	0x01CC4C: main.sym("code_01CC4C"),
	0x01CC53: main.sym("code_01CC53"),
	0x01CC5F: main.sym("code_01CC5F"),
	0x01CC6B: main.sym("code_01CC6B"),
	0x01CC79: main.sym("code_01CC79"),
	0x01CC82: main.sym("code_01CC82"),
	0x01CC9A: main.sym("code_01CC9A"),
	0x01CCA3: main.sym("code_01CCA3"),
	0x01CCB1: main.sym("code_01CCB1"),
	0x01CCCD: main.sym("code_01CCCD"),
	0x01CCE0: main.sym("code_01CCE0"),
	0x01CD34: main.sym("code_01CD34"),
	0x01CDA3: main.sym("code_01CDA3"),
	0x01CDED: main.sym("code_01CDED"),
	0x01CDF0: main.sym("_01CDF0"),
	0x01CE20: main.sym("code_01CE20"),
	0x01CE36: main.sym("code_01CE36"),
	0x01CE46: main.sym("code_01CE46"),
	0x01CE59: main.sym("code_01CE59"),
	0x01CF2D: main.sym("data_01CF2D"),
	0x01CF7E: main.sym("data_01CF7E"),
	0x01CF86: main.sym("data_01CF86"),
	0x01D086: main.sym("data_01D086"),
	0x01DE76: main.sym("data_01DE76"),
	0x01DE78: main.sym("data_01DE76+2"),
	0x01DE7A: main.sym("data_01DE76+4"),
	0x01DE7B: main.sym("data_01DE76+5"),
	0x01DE7C: main.sym("data_01DE76+6"),
	0x01DE7D: main.sym("data_01DE76+7"),
	0x01DF4E: main.sym("code_01DF4E", {"GLOBL"}),
	0x01DF7F: main.sym("code_01DF7F"),
	0x01E08B: main.sym("code_01E08B"),
	0x01E094: main.sym("_01E094"),
	0x01E096: main.sym("_01E096"),
	0x01E09A: main.sym("_01E09A"),
	0x01E09C: main.sym("_01E09C"),
	0x01E09E: main.sym("code_01E09E", {"GLOBL"}),
	0x01E0D6: main.sym("data_01E0D6"),
	0x01E12E: main.sym("code_01E12E"),
	0x01E13A: main.sym("code_01E13A"),
	0x01E176: main.sym("_01E176"),
	0x01E1F8: main.sym("_01E1F8"),
	0x01E3BE: main.sym("_01E3BE"),
	0x01E3FB: main.sym("code_01E3FB"),
	0x01E3FE: main.sym("code_01E3FE"),
	0x01E427: main.sym("code_01E427"),
	0x01E51C: main.sym("data_01E51C"),
	0x01E524: main.sym("data_01E524"),
	0x01E52C: main.sym("data_01E52C"),
	0x01E534: main.sym("code_01E534"),
	0x01E56C: main.sym("code_01E56C"),
	0x01E5B1: main.sym("code_01E5B1"),
	0x01E5BC: main.sym("code_01E5BC"),
	0x01E5D1: main.sym("code_01E5D1"),
	0x01E5D9: main.sym("code_01E5D9"),
	0x01E5E5: main.sym("code_01E5E5"),
	0x01E5FB: main.sym("code_01E5FB"),
	0x01E604: main.sym("code_01E604"),
	0x01E60D: main.sym("code_01E60D"),
	0x01E62C: main.sym("code_01E62C"),
	0x01E64A: main.sym("code_01E64A"),
	0x01E670: main.sym("code_01E670"),
	0x01E71B: main.sym("data_01E71B"),
	0x01E72D: main.sym("data_01E72D"),
	0x01E73F: main.sym("code_01E73F"),
	0x01E756: main.sym("code_01E756"),
	0x01E769: main.sym("code_01E769"),
	0x01E772: main.sym("code_01E772"),
	0x01E77B: main.sym("code_01E77B"),
	0x01E784: main.sym("code_01E784"),
	0x01E78A: main.sym("code_01E78A"),
	0x01E795: main.sym("code_01E795"),
	0x01E7A0: main.sym("code_01E7A0"),
	0x01E7AC: main.sym("code_01E7AC"),
	0x01E7B8: main.sym("_01E7B8"),
	0x01E7EF: main.sym("data_01E7EF"),
	0x01E7F9: main.sym("code_01E7F9"),
	0x01E818: main.sym("code_01E818"),
	0x01E84F: main.sym("code_01E84F"),
	0x01E912: main.sym("code_01E912", {"GLOBL"}),
	0x01E916: main.sym("code_01E916"),
	0x01EA5A: main.sym("code_01EA5A", {"GLOBL","A16"}),
	0x01EA5E: main.sym("code_01EA5E"),
	0x01EA6E: main.sym("data_01EA6E"),
	0x01EA84: main.sym("code_01EA84"),
	0x01EA8A: main.sym("data_01EA8A"),
	0x01EA92: main.sym("code_01EA92"),
	0x01EAD6: main.sym("code_01EAD6"),
	0x01EB1A: main.sym("code_01EB1A"),
	0x01EB75: main.sym("code_01EB75"),
	0x01EBD0: main.sym("data_01EBD0"),
	0x01EBD9: main.sym("data_01EBD9"),
	0x01EBE2: main.sym("code_01EBE2"),
	0x01EBE8: main.sym("data_01EBE8"),
	0x01EBF0: main.sym("code_01EBF0"),
	0x01EC38: main.sym("code_01EC38"),
	0x01EC80: main.sym("code_01EC80"),
	0x01ECD9: main.sym("code_01ECD9"),
	0x01ED5A: main.sym("code_01ED5A"),
	0x01EE4D: main.sym("code_01EE4D"),
	0x01EE52: main.sym("code_01EE52"),
	0x01EEA0: main.sym("_01EEA0"),
	0x01EEC3: main.sym("code_01EEC3"),
	0x01EED5: main.sym("code_01EED5"),
	0x01EEEC: main.sym("code_01EEEC"),
	0x01EF17: main.sym("data_01EF17"),
	0x01EF23: main.sym("code_01EF23"),
	0x01EF71: main.sym("code_01EF71"),
	0x01EF84: main.sym("code_01EF84"),
	0x01EFD8: main.sym("data_01EFD8"),
	0x01EFF9: main.sym("code_01EFF9"),
	0x01F01C: main.sym("data_01F01C"),
	0x01F024: main.sym("code_01F024"),
	0x01F05C: main.sym("code_01F05C"),
	0x01F09F: main.sym("code_01F09F"),
	0x01F0EB: main.sym("code_01F0EB"),
	0x01F13C: main.sym("data_01F13C"),
	0x01F145: main.sym("data_01F145"),
	0x01F14E: main.sym("code_01F14E"),
	0x01F173: main.sym("data_01F173"),
	0x01F17D: main.sym("code_01F17D"),
	0x01F1A0: main.sym("code_01F1A0"),
	0x01F1C7: main.sym("code_01F1C7"),
	0x01F1F7: main.sym("code_01F1F7"),
	0x01F22A: main.sym("_01F22A"),
	0x01F26B: main.sym("code_01F26B"),
	0x01F3C4: main.sym("code_01F3C4"),
	0x01F427: main.sym("code_01F427"),
	0x01F43E: main.sym("data_01F43E"),
	0x01F446: main.sym("code_01F446"),
	0x01F47A: main.sym("code_01F47A"),
	0x01F4BA: main.sym("code_01F4BA"),
	0x01F4FF: main.sym("code_01F4FF"),
	0x01F550: main.sym("code_01F550"),
	0x01F593: main.sym("data_01F593"),
	0x01F595: main.sym("data_01F593+2"),
	0x01F5BA: main.sym("code_01F5BA"),
	0x01F63A: main.sym("data_01F63A"),
	0x01F642: main.sym("code_01F642"),
	0x01F653: main.sym("code_01F653"),
	0x01F66F: main.sym("code_01F66F"),
	0x01F68E: main.sym("code_01F68E"),
	0x01F6B8: main.sym("data_01F6B8"),
	0x01F6BA: main.sym("data_01F6B8+2"),
	0x01F6C4: main.sym("data_01F6C4"),
	0x01F6C6: main.sym("data_01F6C4+2"),
	0x01F6F7: main.sym("_01F6F7"),
	0x01F705: main.sym("_01F705"),
	0x01F79F: main.sym("_01F79F"),
	0x01F7CF: main.sym("data_01F7CF"),
	0x01F7D5: main.sym("code_01F7D5"),
	0x01F810: main.sym("code_01F810"),
	0x01F825: main.sym("code_01F825"),
	0x01F847: main.sym("code_01F847"),
	0x01F863: main.sym("data_01F863"),
	0x01F86C: main.sym("code_01F86C"),
	0x01F8A8: main.sym("code_01F8A8"),
	0x01F8DF: main.sym("code_01F8DF"),
	0x01F938: main.sym("code_01F938"),
	0x01FA16: main.sym("code_01FA16"),
	0x01FAE4: main.sym("code_01FAE4"),
	0x01FBA2: main.sym("code_01FBA2"),
	0x01FBC1: main.sym("code_01FBC1"),
	0x01FC34: main.sym("code_01FC34"),
	0x01FC53: main.sym("code_01FC53"),
	0x01FCC6: main.sym("code_01FCC6"),
	0x01FD26: main.sym("_01FD26"),
	0x01FD43: main.sym("code_01FD43"),
	0x01FD77: main.sym("data_01FD77"),
	0x01FD79: main.sym("data_01FD77+2"),
	0x01FD98: main.sym("data_01FD98"),
	0x01FD9A: main.sym("data_01FD98+2"),
	0x01FDB9: main.sym("data_01FDB9"),
	0x01FDBB: main.sym("data_01FDB9+2"),
	0x01FE40: main.sym("data_01FE40"),
	0x01FE42: main.sym("data_01FE40+2"),
	0x01FEC7: main.sym("data_01FEC7"),
	0x01FEC9: main.sym("data_01FEC7+2"),
	0x01FF06: main.sym("data_01FF06"),
	0x01FF08: main.sym("data_01FF06+2"),
	0x01FF45: main.sym("data_01FF45"),
	0x01FF56: main.sym("data_01FF56"),
	0x01FF57: main.sym("data_01FF57"),
	0x01FF59: main.sym("data_01FF57+2"),
	0x01FF87: main.sym("data_01FF87"),
	0x01FF89: main.sym("data_01FF87+2"),
	0x01FFB7: main.sym("data_01FFB7"),
	0x01FFB9: main.sym("data_01FFB7+2"),
	0x01FFCF: main.sym("data_01FFCF"),
}

sym_E0_01 = {
	0x01DFC6: main.sym("code_01DFC6_E0", {"GLOBL"}),
}

sym_J0_02 = {
}

sym_J0_03 = {
	0x0397F4: main.sym("code_0397F4", {"GLOBL"}),
	0x03A02A: main.sym("code_03A02A", {"GLOBL"}),
	0x03A103: main.sym("code_03A103", {"GLOBL"}),
	0x03A18A: main.sym("code_03A18A", {"GLOBL"}),
	0x03A25E: main.sym("code_03A25E", {"GLOBL"}),
	0x03A2B4: main.sym("code_03A2B4", {"GLOBL"}),
	0x03AC02: main.sym("code_03AC02", {"GLOBL"}),
	0x03D644: main.sym("code_03D644", {"GLOBL"}),
	0x03EC3A: main.sym("code_03EC3A", {"GLOBL"}),
}

sym_J0_04 = {
	0x048184: main.sym("code_048184", {"GLOBL"}),
}

sym_J0_05 = {
	0x05813A: main.sym("code_05813A", {"GLOBL"}),
	0x05971A: main.sym("code_05971A", {"GLOBL"}),
	0x059A15: main.sym("code_059A15", {"GLOBL"}),
	0x059A1B: main.sym("code_059A1B", {"GLOBL"}),
	0x059A39: main.sym("code_059A39", {"GLOBL"}),
	0x059A4C: main.sym("code_059A4C", {"GLOBL"}),
	0x059AD7: main.sym("code_059AD7", {"GLOBL"}),
	0x059AF3: main.sym("code_059AF3", {"GLOBL"}),
	0x059B01: main.sym("code_059B01", {"GLOBL"}),
	0x059CC1: main.sym("code_059CC1", {"GLOBL"}),
	0x059D1F: main.sym("code_059D1F", {"GLOBL"}),
	0x05A26C: main.sym("code_05A26C", {"GLOBL"}),
	0x05EBC4: main.sym("code_05EBC4", {"GLOBL"}),
	0x05EE86: main.sym("data_05EE86", {"GLOBL"}),
}

sym_J0_C7 = {
	0xC792FC: main.sym("_C792FC"),
}

sym_J0_C9 = {
	0xC905FC: main.sym("code_C905FC", {"GLOBL"}),
}

sym_J0_CF = {
	0xCF2E10: main.sym("code_CF2E10", {"GLOBL"}),
	0xCF63B6: main.sym("code_CF63B6", {"GLOBL"}),
	0xCF63F8: main.sym("code_CF63F8", {"GLOBL"}),
	0xCF98A9: main.sym("code_CF98A9", {"GLOBL"}),
	0xCFB350: main.sym("code_CFB350", {"GLOBL"}),
	0xCFB35D: main.sym("code_CFB35D", {"GLOBL"}),
}

sym_J0_D0 = {
	0xD00623: main.sym("code_D00623", {"GLOBL"}),
	0xD00771: main.sym("code_D00771", {"GLOBL"}),
	0xD01566: main.sym("code_D01566", {"GLOBL"}),
	0xD02337: main.sym("code_D02337", {"GLOBL"}),
	0xD0234E: main.sym("code_D0234E", {"GLOBL"}),
}

sym_J0_D3 = {
	0xD3E1DA: main.sym("code_D3E1DA", {"GLOBL"}),
}

sym_E0_D4 = {
	0xD4FB90: main.sym("code_CFB35D", {"GLOBL"}),
}

sym_J0_D5 = {
	0xD59992: main.sym("code_D59992", {"GLOBL"}),
}

sym_J0_bss = {
	0x760D: main.sym("bss_760D"),
	0x7637: main.sym("bss_7637"),
	0x7639: main.sym("bss_7639"),
	0x763B: main.sym("bss_763B"),
	0x763D: main.sym("bss_763D"),
	0x7659: main.sym("bss_7659"),
	0x765D: main.sym("bss_765D"),
	0x7661: main.sym("bss_7661"),
	0x7665: main.sym("bss_7665"),
	0x7671: main.sym("bss_7671"),
	0x7691: main.sym("bss_7691"),
	0x7695: main.sym("bss_7695"),
	0x7699: main.sym("bss_7699"),
	0x769D: main.sym("bss_769D"),
	0x76A1: main.sym("bss_76A1"),
	0x76A5: main.sym("bss_76A5"),
	0x76A9: main.sym("bss_76A9"),
	0x76AD: main.sym("bss_76AD"),
	0x770D: main.sym("bss_770D"),
	0x7934: main.sym("bss_7934"),
	0x7A00: main.sym("bss_7A00"),
	0x7A2F: main.sym("bss_7A2F"),
	0x7A61: main.sym("bss_7A61"),
	0x7A8F: main.sym("bss_7A8F"),
	0x7A95: main.sym("bss_7A95"),
	0x7ABF: main.sym("bss_7ABF"),
	0x7B2B: main.sym("bss_7B2B"),
}

imm_J0_00 = {
	0x80ED: (i_aa,),
	0x8D28: (i_aa,),
	0x8D2E: (i_aa,),
	0x8D34: (i_aa,),
	0x8D3A: (i_aa,),
	0x8E41: (i_aa,),
	0x8E47: (i_aa,),
	0x9202: (i_aa,),
	0x93FA: (i_aa,),
	0xAF6A: i_loword(sym_J0_C7, 0xC792FC),
	0xAF6F: i_hiword(sym_J0_C7, 0xC792FC),
	0xB085: i_loword(sym_J0_C7, 0xC792FC),
	0xB08A: i_hiword(sym_J0_C7, 0xC792FC),
	0xB125: i_loword(sym_J0_C7, 0xC792FC),
	0xB12A: i_hiword(sym_J0_C7, 0xC792FC),
	0xB374: i_loword(sym_J0_C7, 0xC792FC),
	0xB379: i_hiword(sym_J0_C7, 0xC792FC),
	0xB455: i_loword(sym_J0_C7, 0xC792FC),
	0xB45A: i_hiword(sym_J0_C7, 0xC792FC),
}

sym = {
	"J0.00": sym_J0_00,
	"J0.01": sym_J0_01,
	"J0.02": sym_J0_02,
	"J0.03": sym_J0_03,
	"J0.04": sym_J0_04,
	"J0.05": sym_J0_05,
	"J0.C7": sym_J0_C7,
	"J0.C9": sym_J0_C9,
	"J0.CF": sym_J0_CF,
	"J0.D0": sym_J0_D0,
	"J0.D3": sym_J0_D3,
	"J0.D5": sym_J0_D5,
	"J0.bss": sym_J0_bss,

	"E0.00": sym_E0_00,
	"E0.01": sym_E0_01,
	"E0.D4": sym_E0_D4,
}

imm = {
	"J0.00": imm_J0_00,
}

jxx_table = {
	(0x22, "code_8C3F"): "jss ",
	(0x5C, "code_8C3F"): "jms ",
	(0x22, "code_8C6D"): "jsc ",
	(0x5C, "code_8C6D"): "jmc ",
}

def mc_jxx(self, arg, argv):
	lo, hi, ba, op, l, h = argv
	i = (op, hvc.sym_lhb(self, l, h, 0))
	if i in jxx_table:
		return [(self.save, jxx_table[i] + hvc.sym_lhb(self, lo, hi, ba))]
	return None

def mc_ld(self, arg, lo, hi, ba, ma, mb):
	oa, ob = arg
	sym = hvc.sym_lhb(self, lo, hi, ba)
	if sym.startswith("$"): return None
	return [
		(self.save+0, "%s #.%sword(%s)" % (oa, ma, sym)),
		(self.save+3, "%s #.%sword(%s)" % (ob, mb, sym)),
	]

def mc_ld_hl(self, arg, argv):
	ba, lo, hi = argv
	return mc_ld(self, arg, lo, hi, ba, "hi", "lo")

def mc_ld_lh(self, arg, argv):
	lo, hi, ba = argv
	return mc_ld(self, arg, lo, hi, ba, "lo", "hi")

macro = [
	(mc_jxx, (), [0xA9, None, None, 0xA2, None, 0x00, None, None, None, 0x00]),
	(mc_ld_hl, ("ldx", "lda"), [0xA2, None, 0x00, 0xA9, None, None]),
	(mc_ld_hl, ("lda", "ldy"), [0xA9, None, 0x00, 0xA0, None, None]),
	(mc_ld_lh, ("lda", "ldx"), [0xA9, None, None, 0xA2, None, 0x00]),
]

def hal_decode(src):
	dst = B""
	i = 0
	while True:
		x, = struct.unpack(">B", src[i:i+1]); i += 1
		if x == 0xFF: break
		cmd = x >> 5
		siz = x & 0x1F
		if cmd == 7:
			y, = struct.unpack(">B", src[i:i+1]); i += 1
			cmd = (x >> 2) & 7
			siz = (x & 3) << 8 | y
		siz += 1
		if cmd == 0:
			print("0 C   %02X" % siz)
			dst += src[i:i+siz]; i += siz
		elif cmd == 1:
			dst += siz*src[i:i+1]; i += 1
		elif cmd == 2:
			dst += siz*src[i:i+2]; i += 2
		elif cmd == 3:
			x, = struct.unpack(">B", src[i:i+1]); i += 1
			for x in range(x, x+siz): dst += struct.pack(">B", x & 0xFF)
		elif cmd == 5:
			x, = struct.unpack(">H", src[i:i+2]); i += 2
			for x in range(x, x+siz):
				x, = struct.unpack(">B", dst[x:x+1])
				y = 0
				if x & 0x80: y |= 0x01
				if x & 0x40: y |= 0x02
				if x & 0x20: y |= 0x04
				if x & 0x10: y |= 0x08
				if x & 0x08: y |= 0x10
				if x & 0x04: y |= 0x20
				if x & 0x02: y |= 0x40
				if x & 0x01: y |= 0x80
				dst += struct.pack(">B", y)
		elif cmd == 6:
			x, = struct.unpack(">H", src[i:i+2]); i += 2
			dst += dst[x:x-siz:-1]
		else:
			x, = struct.unpack(">H", src[i:i+2]); i += 2
			for x in range(x, x+siz): dst += dst[x:x+1]
	return dst

def s_hal(self, argv, data):
	return hal_decode(data)

def s_str_code(segment=None):
	s = ".include \"main.inc\"\n\n"
	if segment != None: s += (
		".segment \"%s\"\n"
		".a16\n"
		".i16\n"
	) % segment
	return [main.s_str, s]

def s_bin(seg, start, end, name):
	return [main.s_call, [
		[main.s_bin, seg, start, end, ["%s.bin" % name]],
		[main.s_str, ".incbin \"%s.bin\"\n" % name],
	]]

def s_bank(seg, start, J0, J1, J2, E0, P0, name):
	return [main.s_call, [
		s_segment(name),
		s_ifdef("TARGET_J0"),
			s_bin("J0."+seg, start, J0, "J0."+name),
		s_endif("TARGET_J0"),
		s_ifdef("TARGET_J1"),
			s_bin("J1."+seg, start, J1, "J1."+name),
		s_endif("TARGET_J1"),
		s_ifdef("TARGET_J2"),
			s_bin("J2."+seg, start, J2, "J2."+name),
		s_endif("TARGET_J2"),
		s_ifdef("TARGET_E0"),
			s_bin("E0."+seg, start, E0, "E0."+name),
		s_endif("TARGET_E0"),
		s_ifdef("TARGET_P0"),
			s_bin("P0."+seg, start, P0, "P0."+name),
		s_endif("TARGET_P0"),
	]]

d_mem = ["MEM", lambda self: "$%02X, $%04X, $%06X, $%04X" % (
	self.u8(), self.u16(), self.u24(), self.u16()
)]

def d_mem_n(n):
	return [[n, 1, d_mem], [1, 1, hvc.asm.d_byte]]

src_code = [
	s_str_code(),
	[hvc.asm.s_code, "J0.00", 0x8000, 0x83E6, 1, 0x30],
	[hvc.asm.s_data, "J0.00", 0x83E6, 0x842C, 1, [
		[1, 2, "lhb"],
		[16, 1, hvc.asm.d_faraddr],
		[5, 1, ["struct_841C", lambda self: "$%02X, %s" % (self.u8(), hvc.aw(self))]],
		[1, 1, hvc.asm.d_byte],
	]],
	[hvc.asm.s_code, "J0.00", 0x842C, 0x869D, 1, 0],
	[hvc.asm.s_data, "J0.00", 0x869D, 0x86E5, 1, [[24, 3, hvc.asm.d_byte]]],
	[hvc.asm.s_code, "J0.00", 0x86E5, 0x8A9B, 1, 0],
	# s_ifndef("TARGET_J0"),
	# 	[hvc.asm.s_code, "E0.00", 0x8A9B, 0x8AC0, 1, 0],
	# s_endif("TARGET_J0"),
	[hvc.asm.s_code, "J0.00", 0x8A9B, 0x8AED, 1, 0],
	[hvc.asm.s_data, "J0.00", 0x8AED, 0x8B8D, 1, [
		[10, 4, hvc.asm.d_word],
		[4, 4, hvc.asm.d_word],
		[1, 8, hvc.asm.d_byte],
		[4, 4, hvc.asm.d_word],
		[1, 8, hvc.asm.d_byte],
	]],
	[hvc.asm.s_code, "J0.00", 0x8B8D, 0x8D12, 1, 0],
	# s_ifndef("TARGET_J0", 1, 0),
	# 	[hvc.asm.s_code, "E0.00", 0x8D37, 0x8D4F, 1, 0],
	# 	[hvc.asm.s_data, "E0.00", 0x8D4F, 0x8D6F, 1, [[4, 4, hvc.asm.d_word]]],
	# s_endif("TARGET_J0", 0, 1),
	[hvc.asm.s_data, "J0.00", 0x8D12, 0x8D28, 1, "addr"],
	[hvc.asm.s_code, "J0.00", 0x8D28, 0x8F5A, 1, 0],
	[hvc.asm.s_data, "J0.00", 0x8F5A, 0x8F62, 1, "addr"],
	[hvc.asm.s_code, "J0.00", 0x8F62, 0x9287, 1, 0],
	[hvc.asm.s_data, "J0.00", 0x9287, 0x930B, 1, "addr"],
	[hvc.asm.s_code, "J0.00", 0x930B, 0x9384, 1, 0],
	[hvc.asm.s_data, "J0.00", 0x9384, 0x93F6, 1, "addr"],
	[hvc.asm.s_code, "J0.00", 0x93F6, 0x9672, 1, 0],
	[hvc.asm.s_data, "J0.00", 0x9672, 0x967A, 1, "addr"],
	[hvc.asm.s_code, "J0.00", 0x967A, 0x9C58, 1, 0],
	[hvc.asm.s_data, "J0.00", 0x9C58, 0x9C5E, 1, "addr"],
	[hvc.asm.s_code, "J0.00", 0x9C5E, 0x9CCF, 1, 0],
	[hvc.asm.s_data, "J0.00", 0x9CCF, 0x9CDF, 1, "word"],
	[hvc.asm.s_code, "J0.00", 0x9CDF, 0xB762, 1, 0],
	[hvc.asm.s_data, "J0.00", 0xB762, 0xB776, 1, [[4, 5, hvc.asm.d_byte]]],
	[hvc.asm.s_code, "J0.00", 0xB776, 0xB7F0, 1, 0],
	[hvc.asm.s_data, "J0.00", 0xB7F0, 0xBBCC, 1, [
		[24, 1, hvc.asm.d_faraddr],
		[229, 2, hvc.asm.d_word],
	]],
	[hvc.asm.s_code, "J0.00", 0xBBCC, 0xBC3E, 1, 0],
	[hvc.asm.s_data, "J0.00", 0xBC3E, 0xBC71, 1, "faraddr"],
	[hvc.asm.s_code, "J0.00", 0xBC71, 0xBD25, 1, 0],
	[hvc.asm.s_data, "J0.00", 0xBD25, 0xBD86, 1, "byte"],
	[hvc.asm.s_code, "J0.00", 0xBD86, 0xBE3C, 1, 0],
	[hvc.asm.s_data, "J0.00", 0xBE3C, 0xBE45, 1, [[3, 3, hvc.asm.d_byte]]],
	[hvc.asm.s_code, "J0.00", 0xBE45, 0xBE66, 1, 0],
	[hvc.asm.s_data, "J0.00", 0xBE66, 0xBE6C, 1, [[2, 3, hvc.asm.d_byte]]],
	[hvc.asm.s_code, "J0.00", 0xBE6C, 0xBF58, 1, 0],
	[hvc.asm.s_data, "J0.00", 0xBF58, 0xBF66, 1, [[2, 7, hvc.asm.d_byte]]],
	[hvc.asm.s_code, "J0.00", 0xBF66, 0xBF8B, 1, 0],
	[hvc.asm.s_data, "J0.00", 0xBF8B, 0xBF99, 1, "addr"],
	[hvc.asm.s_code, "J0.00", 0xBF99, 0xC0D2, 1, 0],
	s_ifndef("TARGET_J0"),
		[hvc.asm.s_code, "J1.00", 0xC0D2, 0xC0D6, 1, 0],
	s_endif("TARGET_J0"),
	[hvc.asm.s_code, "J0.00", 0xC0D2, 0xC247, 1, 0],
	[hvc.asm.s_data, "J0.00", 0xC247, 0xC251, 1, "addr"],
	[hvc.asm.s_code, "J0.00", 0xC251, 0xC324, 1, 0],
	[hvc.asm.s_data, "J0.00", 0xC324, 0xC347, 1, [
		[1, d_mem_n(4)],
		[1, 1, hvc.asm.d_word],
	]],
	[hvc.asm.s_code, "J0.00", 0xC347, 0xC35C, 1, 0],
	[hvc.asm.s_data, "J0.00", 0xC35C, 0xC36E, 1, "addr"],
	[hvc.asm.s_code, "J0.00", 0xC36E, 0xC6DE, 1, 0],
	[hvc.asm.s_data, "J0.00", 0xC6DE, 0xC6E5, 1, [[1, 7, hvc.asm.d_byte]]],
	[hvc.asm.s_code, "J0.00", 0xC6E5, 0xC7F1, 1, 0],
	[hvc.asm.s_data, "J0.00", 0xC7F1, 0xC7F7, 1, "addr"],
	[hvc.asm.s_code, "J0.00", 0xC7F7, 0xC926, 1, 0],
	[hvc.asm.s_data, "J0.00", 0xC926, 0xC92E, 1, "addr"],
	[hvc.asm.s_code, "J0.00", 0xC92E, 0xC970, 1, 0],
	[hvc.asm.s_data, "J0.00", 0xC970, 0xCA9C, 1, [[25, 12, hvc.asm.d_byte]]],
	[hvc.asm.s_code, "J0.00", 0xCA9C, 0xCB2F, 1, 0],
	# s_ifndef("TARGET_J0"),
	# 	[hvc.asm.s_code, "E0.00", 0xCB90, 0xCB9A, 1, 0],
	# s_endif("TARGET_J0"),
	[hvc.asm.s_code, "J0.00", 0xCB2F, 0xCD05, 1, 0],
	[hvc.asm.s_data, "J0.00", 0xCD05, 0xCD1E, 1, d_mem_n(3)],
	[hvc.asm.s_code, "J0.00", 0xCD1E, 0xCD81, 1, 0],
	[hvc.asm.s_data, "J0.00", 0xCD81, 0xCDCB, 1, [
		[1, 47, "ascii"],
		[1, 27, "ascii"],
	]],
	[hvc.asm.s_code, "J0.00", 0xCDCB, 0xD632, 1, 0],
	[hvc.asm.s_data, "J0.00", 0xD632, 0xD77C, 1, "faraddr"],
	[hvc.asm.s_data, "J0.00", 0xD77C, 0xD7BD, 1, "byte"],
	[hvc.asm.s_code, "J0.00", 0xD7BD, 0xDA93, 1, 0],
	[hvc.asm.s_data, "J0.00", 0xDA93, 0xDAE9, 1, [[43, 1, hvc.asm.d_word]]],
	[hvc.asm.s_code, "J0.00", 0xDAE9, 0xDC18, 1, 0],
	[hvc.asm.s_data, "J0.00", 0xDC18, 0xDC20, 1, "addr"],
	[hvc.asm.s_code, "J0.00", 0xDC20, 0xDDA7, 1, 0],
	[hvc.asm.s_data, "J0.00", 0xDDA7, 0xDDBB, 1, [
		[1, d_mem_n(1)],
		[1, 1, hvc.asm.d_word],
		[1, d_mem_n(1)],
	]],
	[hvc.asm.s_code, "J0.00", 0xDDBB, 0xEA23, 1, 0],
	[hvc.asm.s_data, "J0.00", 0xEA23, 0xEA45, 1, "word"],
	[hvc.asm.s_code, "J0.00", 0xEA45, 0xEA5D, 1, 0],
	[hvc.asm.s_data, "J0.00", 0xEA5D, 0xEA73, 1, "addr"],
	[hvc.asm.s_code, "J0.00", 0xEA73, 0xEBE4, 1, 0],
	[hvc.asm.s_data, "J0.00", 0xEBE4, 0xEBE8, 1, "word"],
	[hvc.asm.s_code, "J0.00", 0xEBE8, 0xED73, 1, 0],
	[hvc.asm.s_data, "J0.00", 0xED73, 0xED81, 1, [[2, 7, hvc.asm.d_byte]]],
	[hvc.asm.s_code, "J0.00", 0xED81, 0xEDC2, 1, 0],
	[hvc.asm.s_data, "J0.00", 0xEDC2, 0xEDC8, 1, "addr"],
	[hvc.asm.s_code, "J0.00", 0xEDC8, 0xEEC6, 1, 0],
	[hvc.asm.s_data, "J0.00", 0xEEC6, 0xEEC9, 1, [[3, 1, hvc.asm.d_byte]]],
	[hvc.asm.s_code, "J0.00", 0xEEC9, 0xF082, 1, 0],
	[hvc.asm.s_data, "J0.00", 0xF082, 0xF091, 1, [[5, 3, hvc.asm.d_byte]]],
	[hvc.asm.s_code, "J0.00", 0xF091, 0xF11A, 1, 0],
]

src_header = [
	s_segment("HEADER"),
	[hvc.asm.s_data, "J0.00", 0xFFC0, 0xFFD9, 1, [[1, 21, "ascii"], [4, 1, hvc.asm.d_byte]]],
	[main.s_str, "\t.byte DESTCODE\n"],
	[hvc.asm.s_data, "J0.00", 0xFFDA, 0xFFDB, 1, "byte"],
	[main.s_str, "\t.byte VERSION\n"],
	[main.s_str, "\t.word $FFFF, $0000\n"],
	[hvc.asm.s_data, "J0.00", 0xFFE0, 0x10000, 1, "addr"],
	[main.s_str, "\n"],
	s_segment("REGISTRY"),
	[hvc.asm.s_data, "J0.00", 0xFFB0, 0xFFB4, 1, [[1, 2, "ascii"], [1, 3, "ascii"]]],
	[main.s_str, "\t.byte REGION\n"],
	[main.s_str, "\t.res 7, 0\n"],
	[hvc.asm.s_data, "J0.00", 0xFFBD, 0xFFC0, 1, [[3, 1, hvc.asm.d_byte]]],
]

src_code_01 = [
	s_str_code("CODE_01"),
	[hvc.asm.s_code, "J0.01", 0x018000, 0x0181C0, 1, 0],
	[hvc.asm.s_data, "J0.01", 0x0181C0, 0x0181C6, 1, "addr"],
	[hvc.asm.s_code, "J0.01", 0x0181C6, 0x0183BC, 1, 0],
	[hvc.asm.s_data, "J0.01", 0x0183BC, 0x0183C2, 1, "word"],
	[hvc.asm.s_code, "J0.01", 0x0183C2, 0x018479, 1, 0],
	[hvc.asm.s_data, "J0.01", 0x018479, 0x0184DA, 1, [
		[1, d_mem_n(1)],
		[1, d_mem_n(3)],
		[7, d_mem_n(1)],
	]],
	[hvc.asm.s_code, "J0.01", 0x0184DA, 0x018574, 1, 0],
	[hvc.asm.s_data, "J0.01", 0x018574, 0x01857A, 1, "addr"],
	[hvc.asm.s_code, "J0.01", 0x01857A, 0x018610, 1, 0],
	[hvc.asm.s_data, "J0.01", 0x018610, 0x018654, 1, [[4, d_mem_n(2)]]],
	[hvc.asm.s_code, "J0.01", 0x018654, 0x01875A, 1, 0],
	[hvc.asm.s_data, "J0.01", 0x01875A, 0x018768, 1, "addr"],
	[hvc.asm.s_code, "J0.01", 0x018768, 0x01897B, 1, 0],
	[hvc.asm.s_data, "J0.01", 0x01897B, 0x0189F3, 1, "word"],
	[hvc.asm.s_code, "J0.01", 0x0189F3, 0x018B1E, 1, 0],
	[hvc.asm.s_data, "J0.01", 0x018B1E, 0x018B30, 1, [[1, 9, hvc.asm.d_word]]],
	[hvc.asm.s_code, "J0.01", 0x018B30, 0x018F2E, 1, 0],
	[hvc.asm.s_data, "J0.01", 0x018F2E, 0x018F40, 1, [[1, 9, hvc.asm.d_word]]],
	[hvc.asm.s_code, "J0.01", 0x018F40, 0x019A15, 1, 0],
	[hvc.asm.s_data, "J0.01", 0x019A15, 0x019A21, 1, "addr"],
	[hvc.asm.s_code, "J0.01", 0x019A21, 0x019C48, 1, 0],
	[hvc.asm.s_data, "J0.01", 0x019C48, 0x019C64, 1, [[2, 7, hvc.asm.d_word]]],
	[hvc.asm.s_code, "J0.01", 0x019C64, 0x019DEF, 1, 0],
	[hvc.asm.s_data, "J0.01", 0x019DEF, 0x019E13, 1, [[6, 6, hvc.asm.d_byte]]],
	[hvc.asm.s_code, "J0.01", 0x019E13, 0x01A049, 1, 0],
	[hvc.asm.s_data, "J0.01", 0x01A049, 0x01A07F, 1, [[9, 3, hvc.asm.d_word]]],
	[hvc.asm.s_code, "J0.01", 0x01A07F, 0x01A568, 1, 0],
	[hvc.asm.s_data, "J0.01", 0x01A568, 0x01A588, 1, "addr"],
	[hvc.asm.s_code, "J0.01", 0x01A588, 0x01A6AF, 1, 0],
	[hvc.asm.s_data, "J0.01", 0x01A6AF, 0x01A6B7, 1, "addr"],
	[hvc.asm.s_code, "J0.01", 0x01A6B7, 0x01A806, 1, 0],
	[hvc.asm.s_data, "J0.01", 0x01A806, 0x01A82B, 1, [
		[17, 1, hvc.asm.d_word],
		[1, 3, hvc.asm.d_byte],
	]],
	[hvc.asm.s_code, "J0.01", 0x01A82B, 0x01A98D, 1, 0],
	[hvc.asm.s_data, "J0.01", 0x01A98D, 0x01A995, 1, [[4, 2, hvc.asm.d_byte]]],
	[hvc.asm.s_code, "J0.01", 0x01A995, 0x01AB55, 1, 0],
	[hvc.asm.s_data, "J0.01", 0x01AB55, 0x01AB6D, 1, [[3, 4, hvc.asm.d_word]]],
	[hvc.asm.s_code, "J0.01", 0x01AB6D, 0x01AC91, 1, 0],
	[hvc.asm.s_data, "J0.01", 0x01AC91, 0x01ACBD, 1, "addr"],
	[hvc.asm.s_code, "J0.01", 0x01ACBD, 0x01ADAA, 1, 0],
	[hvc.asm.s_data, "J0.01", 0x01ADAA, 0x01ADB2, 1, "addr"],
	[hvc.asm.s_code, "J0.01", 0x01ADB2, 0x01AE7F, 1, 0],
	[hvc.asm.s_data, "J0.01", 0x01AE7F, 0x01AF77, 1, [[31, 4, hvc.asm.d_word]]],
	[hvc.asm.s_code, "J0.01", 0x01AF77, 0x01AFAF, 1, 0],
	[hvc.asm.s_data, "J0.01", 0x01AFAF, 0x01AFFF, 1, "addr"],
	[hvc.asm.s_data, "J0.01", 0x01AFFF, 0x01B04F, 1, "word"],
	[hvc.asm.s_code, "J0.01", 0x01B04F, 0x01B067, 1, 0],
	[hvc.asm.s_data, "J0.01", 0x01B067, 0x01B08F, 1, "word"],
	[hvc.asm.s_code, "J0.01", 0x01B08F, 0x01B0A6, 1, 0],
	[hvc.asm.s_data, "J0.01", 0x01B0A6, 0x01B0CE, 1, "word"],
	[hvc.asm.s_code, "J0.01", 0x01B0CE, 0x01B0E6, 1, 0],
	[hvc.asm.s_data, "J0.01", 0x01B0E6, 0x01B10E, 1, "word"],
	[hvc.asm.s_code, "J0.01", 0x01B10E, 0x01B125, 1, 0],
	[hvc.asm.s_data, "J0.01", 0x01B125, 0x01B14D, 1, "word"],
	[hvc.asm.s_code, "J0.01", 0x01B14D, 0x01B188, 1, 0],
	[hvc.asm.s_data, "J0.01", 0x01B188, 0x01B200, 1, "word"],
	[hvc.asm.s_code, "J0.01", 0x01B200, 0x01B23B, 1, 0],
	[hvc.asm.s_data, "J0.01", 0x01B23B, 0x01B2B3, 1, "word"],
	[hvc.asm.s_code, "J0.01", 0x01B2B3, 0x01B2EE, 1, 0],
	[hvc.asm.s_data, "J0.01", 0x01B2EE, 0x01B366, 1, "word"],
	[hvc.asm.s_code, "J0.01", 0x01B366, 0x01B3A1, 1, 0],
	[hvc.asm.s_data, "J0.01", 0x01B3A1, 0x01B419, 1, "word"],
	[hvc.asm.s_code, "J0.01", 0x01B419, 0x01B5CE, 1, 0],
	[hvc.asm.s_data, "J0.01", 0x01B5CE, 0x01B5FE, 1, "word"],
	[hvc.asm.s_code, "J0.01", 0x01B5FE, 0x01B663, 1, 0],
	[hvc.asm.s_data, "J0.01", 0x01B663, 0x01B66F, 1, "addr"],
	[hvc.asm.s_code, "J0.01", 0x01B66F, 0x01B989, 1, 0],
	[hvc.asm.s_data, "J0.01", 0x01B989, 0x01B9AF, 1, "word"],
	[hvc.asm.s_data, "J0.01", 0x01B9AF, 0x01B9BF, 1, "word"],
	[hvc.asm.s_code, "J0.01", 0x01B9BF, 0x01BAC6, 1, 0],
	[hvc.asm.s_data, "J0.01", 0x01BAC6, 0x01BADE, 1, [[4, 3, hvc.asm.d_word]]],
	[hvc.asm.s_code, "J0.01", 0x01BADE, 0x01BC92, 1, 0],
	[hvc.asm.s_data, "J0.01", 0x01BC92, 0X01C1E0, 1], # word
	[hvc.asm.s_code, "J0.01", 0x01C1E0, 0x01C23A, 1, 0],
	[hvc.asm.s_data, "J0.01", 0x01C23A, 0x01C362, 1], # word
	[hvc.asm.s_code, "J0.01", 0x01C362, 0x01C38E, 1, 0],
	[hvc.asm.s_data, "J0.01", 0x01C38E, 0x01C3AE, 1, "addr"],
	[hvc.asm.s_code, "J0.01", 0x01C3AE, 0x01C466, 1, 0],
	[hvc.asm.s_data, "J0.01", 0x01C466, 0x01C486, 1, "addr"],
	[hvc.asm.s_code, "J0.01", 0x01C486, 0x01C551, 1, 0],
	[hvc.asm.s_data, "J0.01", 0x01C551, 0x01C571, 1, "addr"],
	[hvc.asm.s_code, "J0.01", 0x01C571, 0x01C64D, 1, 0],
	[hvc.asm.s_data, "J0.01", 0x01C64D, 0x01C66D, 1, "addr"],
	[hvc.asm.s_code, "J0.01", 0x01C66D, 0x01C6A0, 1, 0],
	[hvc.asm.s_data, "J0.01", 0x01C6A0, 0x01C6C0, 1, "addr"],
	[hvc.asm.s_code, "J0.01", 0x01C6C0, 0x01C6EB, 1, 0],
	[hvc.asm.s_data, "J0.01", 0x01C6EB, 0x01C70B, 1, "addr"],
	[hvc.asm.s_code, "J0.01", 0x01C70B, 0x01C747, 1, 0],
	[hvc.asm.s_data, "J0.01", 0x01C747, 0x01C767, 1, "addr"],
	[hvc.asm.s_code, "J0.01", 0x01C767, 0x01C845, 1, 0],
	[hvc.asm.s_data, "J0.01", 0x01C845, 0x01C865, 1, "addr"],
	[hvc.asm.s_code, "J0.01", 0x01C865, 0x01C966, 1, 0],
	[hvc.asm.s_data, "J0.01", 0x01C966, 0x01C986, 1, "addr"],
	[hvc.asm.s_code, "J0.01", 0x01C986, 0x01CA95, 1, 0],
	[hvc.asm.s_data, "J0.01", 0x01CA95, 0x01CAB5, 1, "addr"],
	[hvc.asm.s_code, "J0.01", 0x01CAB5, 0x01CB50, 1, 0],
	[hvc.asm.s_data, "J0.01", 0x01CB50, 0x01CB70, 1, "addr"],
	[hvc.asm.s_code, "J0.01", 0x01CB70, 0x01CC1A, 1, 0],
	[hvc.asm.s_data, "J0.01", 0x01CC1A, 0x01CC3A, 1, "addr"],
	[hvc.asm.s_code, "J0.01", 0x01CC3A, 0x01CF2D, 1, 0],
	[hvc.asm.s_data, "J0.01", 0x01CF2D, 0x01D186, 1, [
		[27, 3, hvc.asm.d_byte],
		[1, 8, hvc.asm.d_byte],
		[64, 4, hvc.asm.d_word],
	]],
	[hvc.asm.s_data, "J0.01", 0x01D186, 0x01DE76, 1], #
	# s_ifdef("TARGET_J0", 1, 0),
		[hvc.asm.s_data, "J0.01", 0x01DE76, 0x01DF4E, 1, [
			[27, 8, hvc.asm.d_byte], # struct: w, w, b, b, b, b
		]],
	# # tmp
	# s_else("TARGET_J0"),
	# 	[main.s_str, "data_01DE76 = $01DE76\n"],
	# s_endif("TARGET_J0", 0, 1),
	[hvc.asm.s_code, "J0.01", 0x01DF4E, 0x01E06C, 1, 0],
	[hvc.asm.s_data, "J0.01", 0x01E06C, 0x01E06E, 1],
	[hvc.asm.s_code, "J0.01", 0x01E06E, 0x01E0D6, 1, 0],
	[hvc.asm.s_data, "J0.01", 0x01E0D6, 0x01E116, 1, "addr"],
	[hvc.asm.s_code, "J0.01", 0x01E116, 0x01E11E, 1, 0],
	# s_ifndef("TARGET_J0"),
	# 	[hvc.asm.s_code, "E0.01", 0x01E046, 0x01E04B, 1, 0],
	# 	[hvc.asm.s_code, "E0.01", 0x01E04B, 0x01E04B, 1, 0],
	# s_endif("TARGET_J0"),
	[hvc.asm.s_code, "J0.01", 0x01E11E, 0x01E144, 1, 0],
	# s_ifndef("TARGET_J0"),
	# 	[hvc.asm.s_code, "E0.01", 0x01E071, 0x01E077, 1, 0],
	# s_endif("TARGET_J0"),
	[hvc.asm.s_code, "J0.01", 0x01E144, 0x01E14F, 1, 0],
	[hvc.asm.s_code, "J0.01", 0x01E14F, 0x01E14F, 1, 0],
	# s_ifdef("TARGET_J0"),
		[hvc.asm.s_code, "J0.01", 0x01E14F, 0x01E154, 1, 0],
	# s_endif("TARGET_J0"),
	[hvc.asm.s_code, "J0.01", 0x01E154, 0x01E15D, 1, 0],
	# s_ifdef("TARGET_J0"),
		[hvc.asm.s_code, "J0.01", 0x01E15D, 0x01E160, 1, 0],
	# s_else("TARGET_J0"),
	# 	[hvc.asm.s_code, "E0.01", 0x01E08B, 0x01E08E, 1, 0],
	# s_endif("TARGET_J0"),
	[hvc.asm.s_code, "J0.01", 0x01E160, 0x01E167, 1, 0],
	# s_ifdef("TARGET_J0"),
		[hvc.asm.s_code, "J0.01", 0x01E167, 0x01E16A, 1, 0],
	# s_else("TARGET_J0"),
	# 	[hvc.asm.s_code, "E0.01", 0x01E095, 0x01E098, 1, 0],
	# s_endif("TARGET_J0"),
	[hvc.asm.s_code, "J0.01", 0x01E16A, 0x01E1F7, 1, 0],
	# s_ifdef("TARGET_J0"),
		[hvc.asm.s_code, "J0.01", 0x01E1F7, 0x01E1F8, 1, 0x20],
	# s_endif("TARGET_J0"),
	[hvc.asm.s_code, "J0.01", 0x01E1F8, 0x01E204, 1, 0x20],
	# s_ifdef("TARGET_J0"),
		[hvc.asm.s_code, "J0.01", 0x01E204, 0x01E205, 1, 0x20],
	# s_else("TARGET_J0"),
	# 	[hvc.asm.s_code, "E0.01", 0x01E131, 0x01E132, 1, 0x20],
	# s_endif("TARGET_J0"),
	[hvc.asm.s_code, "J0.01", 0x01E205, 0x01E51C, 1, 0x20],

	# s_ifndef("TARGET_J0"),
	# 	[main.s_str, 34*"nop ; PAD\n"],
	# s_endif("TARGET_J0"),

	[hvc.asm.s_data, "J0.01", 0x01E51C, 0x01E534, 1, "word"],
	[hvc.asm.s_code, "J0.01", 0x01E534, 0x01E71B, 1, 0],
	[hvc.asm.s_data, "J0.01", 0x01E71B, 0x01E73F, 1, [[6, 3, hvc.asm.d_word]]],
	[hvc.asm.s_code, "J0.01", 0x01E73F, 0x01E911, 1, 0],
	# s_ifndef("TARGET_J0"),
	# 	[hvc.asm.s_data, "E0.01", 0x01E860, 0x01E920, 1, [[24, 8, hvc.asm.d_byte]]],
	# s_endif("TARGET_J0"),
	[hvc.asm.s_data, "J0.01", 0x01E911, 0x01E912, 1, "byte"],
	[hvc.asm.s_code, "J0.01", 0x01E912, 0x01EA6E, 1, 0],
	[hvc.asm.s_data, "J0.01", 0x01EA6E, 0x01EA84, 1, "addr"],
	[hvc.asm.s_code, "J0.01", 0x01EA84, 0x01EA8A, 1, 0],
	[hvc.asm.s_data, "J0.01", 0x01EA8A, 0x01EA92, 1, "addr"],
	[hvc.asm.s_code, "J0.01", 0x01EA92, 0x01EBD0, 1, 0],
	[hvc.asm.s_data, "J0.01", 0x01EBD0, 0x01EBE2, 1, [[2, d_mem_n(1)]]],
	[hvc.asm.s_code, "J0.01", 0x01EBE2, 0x01EBE8, 1, 0],
	[hvc.asm.s_data, "J0.01", 0x01EBE8, 0x01EBF0, 1, "addr"],
	[hvc.asm.s_code, "J0.01", 0x01EBF0, 0x01ED32, 1, 0],
	[hvc.asm.s_data, "J0.01", 0x01ED32, 0x01ED56, 1, [[4, d_mem_n(1)]]],
	[hvc.asm.s_code, "J0.01", 0x01ED56, 0x01EF17, 1, 0],
	[hvc.asm.s_data, "J0.01", 0x01EF17, 0x01EF23, 1, "word"],
	[hvc.asm.s_code, "J0.01", 0x01EF23, 0x01EFD8, 1, 0],
	[hvc.asm.s_data, "J0.01", 0x01EFD8, 0x01EFF9, 1, d_mem_n(4)],
	[hvc.asm.s_code, "J0.01", 0x01EFF9, 0x01F01C, 1, 0],
	[hvc.asm.s_data, "J0.01", 0x01F01C, 0x01F024, 1, "addr"],
	[hvc.asm.s_code, "J0.01", 0x01F024, 0x01F13C, 1, 0],
	[hvc.asm.s_data, "J0.01", 0x01F13C, 0x01F14E, 1, [[2, d_mem_n(1)]]],
	[hvc.asm.s_code, "J0.01", 0x01F14E, 0x01F173, 1, 0],
	[hvc.asm.s_data, "J0.01", 0x01F173, 0x01F17D, 1, "addr"],
	[hvc.asm.s_code, "J0.01", 0x01F17D, 0x01F43E, 1, 0],
	[hvc.asm.s_data, "J0.01", 0x01F43E, 0x01F446, 1, "addr"],
	[hvc.asm.s_code, "J0.01", 0x01F446, 0x01F593, 1, 0],
	[hvc.asm.s_data, "J0.01", 0x01F593, 0x01F5BA, 1, "faraddr"],
	[hvc.asm.s_code, "J0.01", 0x01F5BA, 0x01F63A, 1, 0],
	[hvc.asm.s_data, "J0.01", 0x01F63A, 0x01F642, 1, "addr"],
	[hvc.asm.s_code, "J0.01", 0x01F642, 0x01F6B8, 1, 0],
	[hvc.asm.s_data, "J0.01", 0x01F6B8, 0x01F6F7, 1, "faraddr"],
	[hvc.asm.s_code, "J0.01", 0x01F6F7, 0x01F7BE, 1, 0],
	[hvc.asm.s_data, "J0.01", 0x01F7BE, 0x01F7CF, 1, d_mem_n(2)],
	[hvc.asm.s_data, "J0.01", 0x01F7CF, 0x01F7D5, 1, "word"],
	[hvc.asm.s_code, "J0.01", 0x01F7D5, 0x01F863, 1, 0],
	[hvc.asm.s_data, "J0.01", 0x01F863, 0x01F86C, 1, "byte"],
	[hvc.asm.s_code, "J0.01", 0x01F86C, 0x01FD77, 1, 0],
	[hvc.asm.s_data, "J0.01", 0x01FD77, 0x01FFD8, 1, [
		[154, 1, hvc.asm.d_faraddr],
		[1, d_mem_n(2)],
		[1, 1, hvc.asm.d_byte],
		[40, 1, hvc.asm.d_faraddr],
		[1, d_mem_n(1)],
	]],
]

src_bank = [
	# s_bank("00", 0x8000, 0xF11A, 0x10000, 0x10000, 0xF185, 0xF185, "CODE"),
	# s_bank("01", 0x018000, 0x01FFD7, 0x020000, 0x020000, 0x01FFE6, 0x01FFD5, "CODE_01"),
	s_bank("02", 0x028000, 0x02F266, 0x030000, 0x030000, 0x02FA81, 0x02FA81, "CODE_02"), # E0=P0 #!
	s_bank("03", 0x038000, 0x03F81A, 0x040000, 0x040000, 0x03F8D0, 0x03F8D0, "CODE_03"), # E0=P0 #!
	s_bank("04", 0x048000, 0x04FFC2, 0x050000, 0x050000, 0x04FFC8, 0x04FFC8, "CODE_04"), # E0=P0 #!
	s_bank("05", 0x058000, 0x05FA8E, 0x060000, 0x060000, 0x05FA93, 0x05FA93, "CODE_05"), # E0=P0 #!
	s_bank("06", 0x068000, 0x06F3FF, 0x070000, 0x070000, 0x06FBFF, 0x06FBFF, "BANK_06"), # E0=P0 #!
	s_bank("07", 0x078000, 0x07F8AA, 0x080000, 0x080000, 0x07FA8F, 0x07F99C, "BANK_07"), #!
	s_bank("C4", 0xC40000, 0xC4FBF7, 0xC50000, 0xC50000, 0xC4FBF7, 0xC4FBF7, "BANK_C4"), #!
	s_bank("C5", 0xC50000, 0xC5FB64, 0xC5FB64, 0xC5FB64, 0xC5FB64, 0xC5FB64, "BANK_C5"), # J0=J1=J2 E0=P0
	s_bank("C6", 0xC60000, 0xC6FEF2, 0xC6FEF2, 0xC6FEF2, 0xC6FEF2, 0xC6FEF2, "BANK_C6"), # J0=J1=J2=E0=P0
	s_bank("C7", 0xC70000, 0xC7F58E, 0xC7F58E, 0xC80000, 0xC7F98E, 0xC7F98E, "BANK_C7"), # J0=J1 #!
	s_bank("C8", 0xC80000, 0xC8FB92, 0xC8FB92, 0xC8FB92, 0xC8FB92, 0xC8FB92, "BANK_C8"), # J0=J1=J2=E0=P0
	s_bank("C9", 0xC90000, 0xC9F988, 0xCA0000, 0xCA0000, 0xC9FFC7, 0xC9FFB5, "CODE_C9"), #!
	s_bank("CA", 0xCA0000, 0xCAF7CD, 0xCB0000, 0xCB0000, 0xCAF814, 0xCAF7FE, "BANK_CA"), #!
	s_bank("CB", 0xCB0000, 0xCBFB22, 0xCC0000, 0xCC0000, 0xCBFBF9, 0xCBFBFA, "BANK_CB"), #!
	s_bank("CC", 0xCC0000, 0xCCF19F, 0xCD0000, 0xCCF19F, 0xCCF0EB, 0xCCF0EB, "BANK_CC"), # J0=J2 E0=P0 #!
	s_bank("CD", 0xCD0000, 0xCDF9AC, 0xCE0000, 0xCDF9AC, 0xCDF9C5, 0xCDF9C5, "BANK_CD"), # J0=J2 E0=P0 #!
	s_bank("CE", 0xCE0000, 0xCEF959, 0xCF0000, 0xCF0000, 0xCEF86E, 0xCEF86E, "BANK_CE"), #!
	s_bank("CF", 0xCF0000, 0xCFFF14, 0xD00000, 0xD00000, 0xCFFF9A, 0xCFFF9A, "CODE_CF"), #!
	s_bank("D0", 0xD00000, 0xD0FC13, 0xD10000, 0xD10000, 0xD0FC5B, 0xD0FC5B, "CODE_D0"), #!
	s_bank("D1", 0xD10000, 0xD1F9A7, 0xD20000, 0xD20000, 0xD1F9B9, 0xD1F9C4, "BANK_D1"), #!
	s_bank("D2", 0xD20000, 0xD2FC82, 0xD30000, 0xD30000, 0xD2FC79, 0xD2FC79, "BANK_D2"), # E0=P0 #!
	s_bank("D3", 0xD30000, 0xD3FF0C, 0xD40000, 0xD40000, 0xD3FFAC, 0xD3FFAC, "CODE_D3"), # E0=P0 #!
	s_bank("D4", 0xD40000, 0xD4F773, 0xD50000, 0xD50000, 0xD4FC42, 0xD4FC42, "BANK_D4"), #!
	s_bank("D5", 0xD50000, 0xD5FD4F, 0xD60000, 0xD60000, 0xD5FD5B, 0xD5FD5B, "CODE_D5"), #!
	s_bank("D6", 0xD60000, 0xEFFB0B, 0xF00000, 0xF00000, 0xEFE984, 0xEFE944, "BANK_D6"), #!
	s_bank("F0", 0xF00000, 0xF0FD45, 0xF10000, 0xF10000, 0xF0F77D, 0xF0F77D, "BANK_F0"), # J1=J2 E0=P0 #!
	s_bank("F1", 0xF10000, 0xF1FFFC, 0xF20000, 0xF20000, 0xF1FFF2, 0xF1FFF2, "BANK_F1"), # J1=J2 E0=P0 #!
	s_bank("F2", 0xF20000, 0xF2FFFD, 0xF30000, 0xF30000, 0xF2FFFC, 0xF2FFFC, "BANK_F2"), # E0=P0 #!
	s_bank("F3", 0xF30000, 0xF3FFE4, 0xF40000, 0xF40000, 0xF3FFFE, 0xF3FFFE, "BANK_F3"), # J1=J2 E0=P0 #!
	s_bank("F4", 0xF40000, 0xF4FFF8, 0xF50000, 0xF50000, 0xF4FFEB, 0xF4FFEB, "BANK_F4"), # E0=P0 #!
	s_bank("F5", 0xF50000, 0xF5FFF5, 0xF5FFF9, 0xF5FFF5, 0xF5FFF9, 0xF5FFF9, "BANK_F5"), # J0=J2 E0=P0
	s_bank("F6", 0xF60000, 0xF6FFE0, 0xF70000, 0xF70000, 0xF6FFF6, 0xF6FFF6, "BANK_F6"), # J1=J2 E0=P0 #!
	s_bank("F7", 0xF70000, 0xF7FFFB, 0xF80000, 0xF80000, 0xF7FFFA, 0xF7FFFA, "BANK_F7"), # J1=J2 E0=P0 #!
	s_bank("F8", 0xF80000, 0xF8FFFB, 0xF90000, 0xF90000, 0xF8FFFC, 0xF8FFFC, "BANK_F8"), # J1=J2 E0=P0 #!
	s_bank("F9", 0xF90000, 0xF9FFF0, 0xF9FFF0, 0xF9FFF0, 0xF9FFF0, 0xF9FFF0, "BANK_F9"), # J0=J1=J2=E0=P0
	s_bank("FA", 0xFA0000, 0xFAFFFD, 0xFAFFFD, 0xFAFFFD, 0xFAFFFD, 0xFAFFFD, "BANK_FA"), # J0=J1=J2=E0=P0
	s_bank("FB", 0xFB0000, 0xFBFFE9, 0xFBFFE9, 0xFBFFE9, 0xFBFFE2, 0xFBFFE2, "BANK_FB"), # J0=J1=J2 E0=P0
	s_bank("FC", 0xFC0000, 0xFCFFED, 0xFCFFED, 0xFCFFED, 0xFCFFED, 0xFCFFED, "BANK_FC"), # J0=J1=J2=E0=P0
	s_bank("FD", 0xFD0000, 0xFDFFFB, 0xFDFFFB, 0xFDFFFB, 0xFDFFFB, 0xFDFFFB, "BANK_FD"), # J0=J1=J2=E0=P0
	s_bank("FE", 0xFE0000, 0xFEFFF0, 0xFEFFF0, 0xFEFFF0, 0xFEFFF0, 0xFEFFF0, "BANK_FE"), # J0=J1=J2=E0=P0
	s_bank("FF", 0xFF0000, 0xFFFFFC, 0xFFFFFC, 0xFFFFFC, 0xFFFFFC, 0xFFFFFC, "BANK_FF"), # J1=J2 E0=P0
]

lst = [
	[main.s_segment, ["donor", "SAKFJ00.sfc"], [
		(0x000000, 0x008000, 0x008000, "J0.00"),
		(0x008000, 0x010000, 0x018000, "J0.01"),
		(0x010000, 0x018000, 0x028000, "J0.02"),
		(0x018000, 0x020000, 0x038000, "J0.03"),
		(0x020000, 0x028000, 0x048000, "J0.04"),
		(0x028000, 0x030000, 0x058000, "J0.05"),
		(0x030000, 0x038000, 0x068000, "J0.06"),
		(0x038000, 0x040000, 0x078000, "J0.07"),
		(0x040000, 0x050000, 0xC40000, "J0.C4"),
		(0x050000, 0x060000, 0xC50000, "J0.C5"),
		(0x060000, 0x070000, 0xC60000, "J0.C6"),
		(0x070000, 0x080000, 0xC70000, "J0.C7"),
		(0x080000, 0x090000, 0xC80000, "J0.C8"),
		(0x090000, 0x0A0000, 0xC90000, "J0.C9"),
		(0x0A0000, 0x0B0000, 0xCA0000, "J0.CA"),
		(0x0B0000, 0x0C0000, 0xCB0000, "J0.CB"),
		(0x0C0000, 0x0D0000, 0xCC0000, "J0.CC"),
		(0x0D0000, 0x0E0000, 0xCD0000, "J0.CD"),
		(0x0E0000, 0x0F0000, 0xCE0000, "J0.CE"),
		(0x0F0000, 0x100000, 0xCF0000, "J0.CF"),
		(0x100000, 0x110000, 0xD00000, "J0.D0"),
		(0x110000, 0x120000, 0xD10000, "J0.D1"),
		(0x120000, 0x130000, 0xD20000, "J0.D2"),
		(0x130000, 0x140000, 0xD30000, "J0.D3"),
		(0x140000, 0x150000, 0xD40000, "J0.D4"),
		(0x150000, 0x160000, 0xD50000, "J0.D5"),
		(0x160000, 0x300000, 0xD60000, "J0.D6"),
		(0x300000, 0x310000, 0xF00000, "J0.F0"),
		(0x310000, 0x320000, 0xF10000, "J0.F1"),
		(0x320000, 0x330000, 0xF20000, "J0.F2"),
		(0x330000, 0x340000, 0xF30000, "J0.F3"),
		(0x340000, 0x350000, 0xF40000, "J0.F4"),
		(0x350000, 0x360000, 0xF50000, "J0.F5"),
		(0x360000, 0x370000, 0xF60000, "J0.F6"),
		(0x370000, 0x380000, 0xF70000, "J0.F7"),
		(0x380000, 0x390000, 0xF80000, "J0.F8"),
		(0x390000, 0x3A0000, 0xF90000, "J0.F9"),
		(0x3A0000, 0x3B0000, 0xFA0000, "J0.FA"),
		(0x3B0000, 0x3C0000, 0xFB0000, "J0.FB"),
		(0x3C0000, 0x3D0000, 0xFC0000, "J0.FC"),
		(0x3D0000, 0x3E0000, 0xFD0000, "J0.FD"),
		(0x3E0000, 0x3F0000, 0xFE0000, "J0.FE"),
		(0x3F0000, 0x400000, 0xFF0000, "J0.FF"),
	]],
	[main.s_segment, ["donor", "SAKFJ01.sfc"], [
		(0x000000, 0x008000, 0x008000, "J1.00"),
		(0x008000, 0x010000, 0x018000, "J1.01"),
		(0x010000, 0x018000, 0x028000, "J1.02"),
		(0x018000, 0x020000, 0x038000, "J1.03"),
		(0x020000, 0x028000, 0x048000, "J1.04"),
		(0x028000, 0x030000, 0x058000, "J1.05"),
		(0x030000, 0x038000, 0x068000, "J1.06"),
		(0x038000, 0x040000, 0x078000, "J1.07"),
		(0x040000, 0x050000, 0xC40000, "J1.C4"),
		(0x050000, 0x060000, 0xC50000, "J1.C5"),
		(0x060000, 0x070000, 0xC60000, "J1.C6"),
		(0x070000, 0x080000, 0xC70000, "J1.C7"),
		(0x080000, 0x090000, 0xC80000, "J1.C8"),
		(0x090000, 0x0A0000, 0xC90000, "J1.C9"),
		(0x0A0000, 0x0B0000, 0xCA0000, "J1.CA"),
		(0x0B0000, 0x0C0000, 0xCB0000, "J1.CB"),
		(0x0C0000, 0x0D0000, 0xCC0000, "J1.CC"),
		(0x0D0000, 0x0E0000, 0xCD0000, "J1.CD"),
		(0x0E0000, 0x0F0000, 0xCE0000, "J1.CE"),
		(0x0F0000, 0x100000, 0xCF0000, "J1.CF"),
		(0x100000, 0x110000, 0xD00000, "J1.D0"),
		(0x110000, 0x120000, 0xD10000, "J1.D1"),
		(0x120000, 0x130000, 0xD20000, "J1.D2"),
		(0x130000, 0x140000, 0xD30000, "J1.D3"),
		(0x140000, 0x150000, 0xD40000, "J1.D4"),
		(0x150000, 0x160000, 0xD50000, "J1.D5"),
		(0x160000, 0x300000, 0xD60000, "J1.D6"),
		(0x300000, 0x310000, 0xF00000, "J1.F0"),
		(0x310000, 0x320000, 0xF10000, "J1.F1"),
		(0x320000, 0x330000, 0xF20000, "J1.F2"),
		(0x330000, 0x340000, 0xF30000, "J1.F3"),
		(0x340000, 0x350000, 0xF40000, "J1.F4"),
		(0x350000, 0x360000, 0xF50000, "J1.F5"),
		(0x360000, 0x370000, 0xF60000, "J1.F6"),
		(0x370000, 0x380000, 0xF70000, "J1.F7"),
		(0x380000, 0x390000, 0xF80000, "J1.F8"),
		(0x390000, 0x3A0000, 0xF90000, "J1.F9"),
		(0x3A0000, 0x3B0000, 0xFA0000, "J1.FA"),
		(0x3B0000, 0x3C0000, 0xFB0000, "J1.FB"),
		(0x3C0000, 0x3D0000, 0xFC0000, "J1.FC"),
		(0x3D0000, 0x3E0000, 0xFD0000, "J1.FD"),
		(0x3E0000, 0x3F0000, 0xFE0000, "J1.FE"),
		(0x3F0000, 0x400000, 0xFF0000, "J1.FF"),
	]],
	[main.s_segment, ["donor", "SAKFJ02.sfc"], [
		(0x000000, 0x008000, 0x008000, "J2.00"),
		(0x008000, 0x010000, 0x018000, "J2.01"),
		(0x010000, 0x018000, 0x028000, "J2.02"),
		(0x018000, 0x020000, 0x038000, "J2.03"),
		(0x020000, 0x028000, 0x048000, "J2.04"),
		(0x028000, 0x030000, 0x058000, "J2.05"),
		(0x030000, 0x038000, 0x068000, "J2.06"),
		(0x038000, 0x040000, 0x078000, "J2.07"),
		(0x040000, 0x050000, 0xC40000, "J2.C4"),
		(0x050000, 0x060000, 0xC50000, "J2.C5"),
		(0x060000, 0x070000, 0xC60000, "J2.C6"),
		(0x070000, 0x080000, 0xC70000, "J2.C7"),
		(0x080000, 0x090000, 0xC80000, "J2.C8"),
		(0x090000, 0x0A0000, 0xC90000, "J2.C9"),
		(0x0A0000, 0x0B0000, 0xCA0000, "J2.CA"),
		(0x0B0000, 0x0C0000, 0xCB0000, "J2.CB"),
		(0x0C0000, 0x0D0000, 0xCC0000, "J2.CC"),
		(0x0D0000, 0x0E0000, 0xCD0000, "J2.CD"),
		(0x0E0000, 0x0F0000, 0xCE0000, "J2.CE"),
		(0x0F0000, 0x100000, 0xCF0000, "J2.CF"),
		(0x100000, 0x110000, 0xD00000, "J2.D0"),
		(0x110000, 0x120000, 0xD10000, "J2.D1"),
		(0x120000, 0x130000, 0xD20000, "J2.D2"),
		(0x130000, 0x140000, 0xD30000, "J2.D3"),
		(0x140000, 0x150000, 0xD40000, "J2.D4"),
		(0x150000, 0x160000, 0xD50000, "J2.D5"),
		(0x160000, 0x300000, 0xD60000, "J2.D6"),
		(0x300000, 0x310000, 0xF00000, "J2.F0"),
		(0x310000, 0x320000, 0xF10000, "J2.F1"),
		(0x320000, 0x330000, 0xF20000, "J2.F2"),
		(0x330000, 0x340000, 0xF30000, "J2.F3"),
		(0x340000, 0x350000, 0xF40000, "J2.F4"),
		(0x350000, 0x360000, 0xF50000, "J2.F5"),
		(0x360000, 0x370000, 0xF60000, "J2.F6"),
		(0x370000, 0x380000, 0xF70000, "J2.F7"),
		(0x380000, 0x390000, 0xF80000, "J2.F8"),
		(0x390000, 0x3A0000, 0xF90000, "J2.F9"),
		(0x3A0000, 0x3B0000, 0xFA0000, "J2.FA"),
		(0x3B0000, 0x3C0000, 0xFB0000, "J2.FB"),
		(0x3C0000, 0x3D0000, 0xFC0000, "J2.FC"),
		(0x3D0000, 0x3E0000, 0xFD0000, "J2.FD"),
		(0x3E0000, 0x3F0000, 0xFE0000, "J2.FE"),
		(0x3F0000, 0x400000, 0xFF0000, "J2.FF"),
	]],
	[main.s_segment, ["donor", "SAKFE00.sfc"], [
		(0x000000, 0x008000, 0x008000, "E0.00"),
		(0x008000, 0x010000, 0x018000, "E0.01"),
		(0x010000, 0x018000, 0x028000, "E0.02"),
		(0x018000, 0x020000, 0x038000, "E0.03"),
		(0x020000, 0x028000, 0x048000, "E0.04"),
		(0x028000, 0x030000, 0x058000, "E0.05"),
		(0x030000, 0x038000, 0x068000, "E0.06"),
		(0x038000, 0x040000, 0x078000, "E0.07"),
		(0x040000, 0x050000, 0xC40000, "E0.C4"),
		(0x050000, 0x060000, 0xC50000, "E0.C5"),
		(0x060000, 0x070000, 0xC60000, "E0.C6"),
		(0x070000, 0x080000, 0xC70000, "E0.C7"),
		(0x080000, 0x090000, 0xC80000, "E0.C8"),
		(0x090000, 0x0A0000, 0xC90000, "E0.C9"),
		(0x0A0000, 0x0B0000, 0xCA0000, "E0.CA"),
		(0x0B0000, 0x0C0000, 0xCB0000, "E0.CB"),
		(0x0C0000, 0x0D0000, 0xCC0000, "E0.CC"),
		(0x0D0000, 0x0E0000, 0xCD0000, "E0.CD"),
		(0x0E0000, 0x0F0000, 0xCE0000, "E0.CE"),
		(0x0F0000, 0x100000, 0xCF0000, "E0.CF"),
		(0x100000, 0x110000, 0xD00000, "E0.D0"),
		(0x110000, 0x120000, 0xD10000, "E0.D1"),
		(0x120000, 0x130000, 0xD20000, "E0.D2"),
		(0x130000, 0x140000, 0xD30000, "E0.D3"),
		(0x140000, 0x150000, 0xD40000, "E0.D4"),
		(0x150000, 0x160000, 0xD50000, "E0.D5"),
		(0x160000, 0x300000, 0xD60000, "E0.D6"),
		(0x300000, 0x310000, 0xF00000, "E0.F0"),
		(0x310000, 0x320000, 0xF10000, "E0.F1"),
		(0x320000, 0x330000, 0xF20000, "E0.F2"),
		(0x330000, 0x340000, 0xF30000, "E0.F3"),
		(0x340000, 0x350000, 0xF40000, "E0.F4"),
		(0x350000, 0x360000, 0xF50000, "E0.F5"),
		(0x360000, 0x370000, 0xF60000, "E0.F6"),
		(0x370000, 0x380000, 0xF70000, "E0.F7"),
		(0x380000, 0x390000, 0xF80000, "E0.F8"),
		(0x390000, 0x3A0000, 0xF90000, "E0.F9"),
		(0x3A0000, 0x3B0000, 0xFA0000, "E0.FA"),
		(0x3B0000, 0x3C0000, 0xFB0000, "E0.FB"),
		(0x3C0000, 0x3D0000, 0xFC0000, "E0.FC"),
		(0x3D0000, 0x3E0000, 0xFD0000, "E0.FD"),
		(0x3E0000, 0x3F0000, 0xFE0000, "E0.FE"),
		(0x3F0000, 0x400000, 0xFF0000, "E0.FF"),
	]],
	[main.s_segment, ["donor", "SAKFP00.sfc"], [
		(0x000000, 0x008000, 0x008000, "P0.00"),
		(0x008000, 0x010000, 0x018000, "P0.01"),
		(0x010000, 0x018000, 0x028000, "P0.02"),
		(0x018000, 0x020000, 0x038000, "P0.03"),
		(0x020000, 0x028000, 0x048000, "P0.04"),
		(0x028000, 0x030000, 0x058000, "P0.05"),
		(0x030000, 0x038000, 0x068000, "P0.06"),
		(0x038000, 0x040000, 0x078000, "P0.07"),
		(0x040000, 0x050000, 0xC40000, "P0.C4"),
		(0x050000, 0x060000, 0xC50000, "P0.C5"),
		(0x060000, 0x070000, 0xC60000, "P0.C6"),
		(0x070000, 0x080000, 0xC70000, "P0.C7"),
		(0x080000, 0x090000, 0xC80000, "P0.C8"),
		(0x090000, 0x0A0000, 0xC90000, "P0.C9"),
		(0x0A0000, 0x0B0000, 0xCA0000, "P0.CA"),
		(0x0B0000, 0x0C0000, 0xCB0000, "P0.CB"),
		(0x0C0000, 0x0D0000, 0xCC0000, "P0.CC"),
		(0x0D0000, 0x0E0000, 0xCD0000, "P0.CD"),
		(0x0E0000, 0x0F0000, 0xCE0000, "P0.CE"),
		(0x0F0000, 0x100000, 0xCF0000, "P0.CF"),
		(0x100000, 0x110000, 0xD00000, "P0.D0"),
		(0x110000, 0x120000, 0xD10000, "P0.D1"),
		(0x120000, 0x130000, 0xD20000, "P0.D2"),
		(0x130000, 0x140000, 0xD30000, "P0.D3"),
		(0x140000, 0x150000, 0xD40000, "P0.D4"),
		(0x150000, 0x160000, 0xD50000, "P0.D5"),
		(0x160000, 0x300000, 0xD60000, "P0.D6"),
		(0x300000, 0x310000, 0xF00000, "P0.F0"),
		(0x310000, 0x320000, 0xF10000, "P0.F1"),
		(0x320000, 0x330000, 0xF20000, "P0.F2"),
		(0x330000, 0x340000, 0xF30000, "P0.F3"),
		(0x340000, 0x350000, 0xF40000, "P0.F4"),
		(0x350000, 0x360000, 0xF50000, "P0.F5"),
		(0x360000, 0x370000, 0xF60000, "P0.F6"),
		(0x370000, 0x380000, 0xF70000, "P0.F7"),
		(0x380000, 0x390000, 0xF80000, "P0.F8"),
		(0x390000, 0x3A0000, 0xF90000, "P0.F9"),
		(0x3A0000, 0x3B0000, 0xFA0000, "P0.FA"),
		(0x3B0000, 0x3C0000, 0xFB0000, "P0.FB"),
		(0x3C0000, 0x3D0000, 0xFC0000, "P0.FC"),
		(0x3D0000, 0x3E0000, 0xFD0000, "P0.FD"),
		(0x3E0000, 0x3F0000, 0xFE0000, "P0.FE"),
		(0x3F0000, 0x400000, 0xFF0000, "P0.FF"),
	]],
	[main.s_copy, ["include"], ["include"]],
	[main.s_dir, "src"],
		[main.s_file, "code.s"],
			[main.s_call, src_code],
		[main.s_write],
		[main.s_file, "header.s"],
			[main.s_call, src_header],
		[main.s_write],
		[main.s_file, "code_01.s"],
			[main.s_call, src_code_01],
		[main.s_write],
		[main.s_file, "bank.s"],
			[main.s_call, src_bank],
		[main.s_write],
	[main.s_pop],
	[main.s_copy, ["tools"], ["tools"]],
	[main.s_copy, ["main.ld"], ["main.ld"]],
	[main.s_copy, ["makefile"], ["makefile"]],
]
